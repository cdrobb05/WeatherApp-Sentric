"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _noop = _interopRequireDefault(require("lodash/noop"));

var _DialogBase2 = _interopRequireDefault(require("./DialogBase"));

var _ConfirmDialogBase = _interopRequireDefault(require("./ConfirmDialogBase"));

var _Checkbox = _interopRequireDefault(require("../Form/Checkbox"));

// (C) 2007-2020 GoodData Corporation
var ExportDialogBase = /*#__PURE__*/function (_DialogBase) {
  (0, _inherits2["default"])(ExportDialogBase, _DialogBase);

  function ExportDialogBase(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, ExportDialogBase);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ExportDialogBase).call(this, props));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onFilterContextChange", function (value) {
      _this.setState({
        includeFilterContext: value
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onMergeHeadersChange", function (value) {
      _this.setState({
        mergeHeaders: value
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onSubmit", function () {
      var filterContextVisible = _this.props.filterContextVisible;
      var _this$state = _this.state,
          includeFilterContext = _this$state.includeFilterContext,
          mergeHeaders = _this$state.mergeHeaders;

      _this.props.onSubmit({
        includeFilterContext: filterContextVisible && includeFilterContext,
        mergeHeaders: mergeHeaders
      });
    });
    var _includeFilterContext = props.includeFilterContext,
        _mergeHeaders = props.mergeHeaders;
    _this.state = {
      includeFilterContext: _includeFilterContext,
      mergeHeaders: _mergeHeaders
    };
    return _this;
  }

  (0, _createClass2["default"])(ExportDialogBase, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          displayCloseButton = _this$props.displayCloseButton,
          isPositive = _this$props.isPositive,
          isSubmitDisabled = _this$props.isSubmitDisabled,
          headline = _this$props.headline,
          cancelButtonText = _this$props.cancelButtonText,
          submitButtonText = _this$props.submitButtonText,
          onCancel = _this$props.onCancel,
          filterContextText = _this$props.filterContextText,
          filterContextTitle = _this$props.filterContextTitle,
          filterContextVisible = _this$props.filterContextVisible,
          mergeHeadersDisabled = _this$props.mergeHeadersDisabled,
          mergeHeadersText = _this$props.mergeHeadersText,
          mergeHeadersTitle = _this$props.mergeHeadersTitle;
      var _this$state2 = this.state,
          includeFilterContext = _this$state2.includeFilterContext,
          mergeHeaders = _this$state2.mergeHeaders;
      var filterContextCheckbox;

      if (filterContextVisible) {
        filterContextCheckbox = _react["default"].createElement(_Checkbox["default"], {
          name: "gs.dialog.export.checkbox.includeFilterContext",
          text: filterContextText,
          title: filterContextTitle,
          value: includeFilterContext,
          onChange: this.onFilterContextChange
        });
      }

      return (// eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
        _react["default"].createElement(_ConfirmDialogBase["default"], {
          className: "gd-export-dialog",
          displayCloseButton: displayCloseButton,
          isPositive: isPositive,
          isSubmitDisabled: isSubmitDisabled,
          headline: headline,
          cancelButtonText: cancelButtonText,
          submitButtonText: submitButtonText,
          onCancel: onCancel,
          onSubmit: this.onSubmit
        }, _react["default"].createElement(_Checkbox["default"], {
          disabled: mergeHeadersDisabled,
          name: "gs.dialog.export.checkbox.mergeHeaders",
          text: mergeHeadersText,
          title: mergeHeadersTitle,
          value: mergeHeaders,
          onChange: this.onMergeHeadersChange
        }), filterContextCheckbox)
      );
    }
  }]);
  return ExportDialogBase;
}(_DialogBase2["default"]);

exports["default"] = ExportDialogBase;
(0, _defineProperty2["default"])(ExportDialogBase, "propTypes", {
  displayCloseButton: _propTypes["default"].bool,
  isPositive: _propTypes["default"].bool,
  isSubmitDisabled: _propTypes["default"].bool,
  headline: _propTypes["default"].string,
  cancelButtonText: _propTypes["default"].string,
  submitButtonText: _propTypes["default"].string,
  filterContextText: _propTypes["default"].string,
  filterContextTitle: _propTypes["default"].string,
  filterContextVisible: _propTypes["default"].bool,
  includeFilterContext: _propTypes["default"].bool,
  mergeHeaders: _propTypes["default"].bool,
  mergeHeadersDisabled: _propTypes["default"].bool,
  mergeHeadersText: _propTypes["default"].string,
  mergeHeadersTitle: _propTypes["default"].string,
  onCancel: _propTypes["default"].func,
  onSubmit: _propTypes["default"].func
});
(0, _defineProperty2["default"])(ExportDialogBase, "defaultProps", {
  displayCloseButton: true,
  isPositive: true,
  isSubmitDisabled: false,
  headline: "Export to XLSX",
  cancelButtonText: "Cancel",
  submitButtonText: "Export",
  filterContextText: "Include applied filters",
  filterContextTitle: "INSIGHT CONTEXT",
  filterContextVisible: true,
  includeFilterContext: true,
  mergeHeaders: true,
  mergeHeadersDisabled: false,
  mergeHeadersText: "Keep attribute cells merged",
  mergeHeadersTitle: "CELLS",
  onCancel: _noop["default"],
  onSubmit: _noop["default"]
});