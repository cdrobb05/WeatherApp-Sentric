"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Button = _interopRequireDefault(require("../../Button/Button"));

var _constants = require("../../core/constants");

// (C) 2020 GoodData Corporation
var checkKeyHandler = function checkKeyHandler(event, keyCode, handler) {
  if (event.keyCode === keyCode && handler) {
    event.preventDefault();
    event.stopPropagation();
    handler();
  }
};

var isTextInputComponent = function isTextInputComponent(_ref) {
  var target = _ref.target;
  var tagName = target.tagName,
      type = target.type;
  var tagNameInLowercase = tagName.toLowerCase();
  var typeInLowercase = type ? type.toLowerCase() : "";
  return tagNameInLowercase === "textarea" || tagNameInLowercase === "input" && typeInLowercase === "text";
};

var DialogBase = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(DialogBase, _React$Component);

  function DialogBase() {
    var _this;

    (0, _classCallCheck2["default"])(this, DialogBase);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(DialogBase).apply(this, arguments));

    _this.onKeyDown = function (event) {
      var _this$props = _this.props,
          submitOnEnterKey = _this$props.submitOnEnterKey,
          onCancel = _this$props.onCancel,
          onSubmit = _this$props.onSubmit; // don't call onSubmit when pressing enter key on input fields

      var isEnterKeyDownOnInputField = event.keyCode === _constants.KEY_CODE_ENTER && isTextInputComponent(event);

      if (submitOnEnterKey === false && isEnterKeyDownOnInputField) {
        return;
      }

      checkKeyHandler(event, _constants.KEY_CODE_ENTER, onSubmit);
      checkKeyHandler(event, _constants.KEY_CODE_ESCAPE, onCancel);
    };

    return _this;
  }

  (0, _createClass2["default"])(DialogBase, [{
    key: "render",
    value: function render() {
      var dialogClasses = this.getDialogClasses();
      return _react["default"].createElement("div", {
        tabIndex: 0,
        onKeyDown: this.onKeyDown
      }, _react["default"].createElement("div", {
        className: dialogClasses
      }, this.props.displayCloseButton && this.renderCloseButton(), this.props.children));
    }
  }, {
    key: "renderCloseButton",
    value: function renderCloseButton() {
      return _react["default"].createElement("div", {
        className: "gd-dialog-close"
      }, _react["default"].createElement(_Button["default"], {
        className: "gd-button-link gd-button-icon-only icon-cross s-dialog-close-button",
        value: "",
        onClick: this.props.onCancel
      }));
    }
  }, {
    key: "getDialogClasses",
    value: function getDialogClasses(additionalClassName) {
      return (0, _classnames["default"])("overlay", "gd-dialog", additionalClassName, this.props.className);
    }
  }]);
  return DialogBase;
}(_react["default"].Component);

exports["default"] = DialogBase;
DialogBase.defaultProps = {
  className: "",
  displayCloseButton: false,
  submitOnEnterKey: true
};