import React, { PureComponent } from "react";
import { IAlignPoint, OverlayPositionType } from "../Overlay";
interface IRenderButtonProps {
    isMobile: boolean;
    isOpen: boolean;
    openDropdown: () => void;
    closeDropdown: () => void;
    toggleDropdown: () => void;
}
export interface IDropdownProps {
    renderBody: (props: {
        closeDropdown: () => void;
        isMobile: boolean;
    }) => React.ReactNode;
    renderButton: (props: IRenderButtonProps) => React.ReactNode;
    openOnInit?: boolean;
    className?: string;
    alignPoints?: IAlignPoint[];
    closeOnMouseDrag?: boolean;
    closeOnOutsideClick?: boolean;
    closeOnParentScroll?: boolean;
    ignoreClicksOnByClass?: string[];
    onOpenStateChanged?: (isOpen: boolean) => void;
    overlayPositionType?: OverlayPositionType;
    overlayZIndex?: number;
}
interface IDropdownState {
    isOpen: boolean;
    dropdownId: string;
}
export declare class Dropdown extends PureComponent<IDropdownProps, IDropdownState> {
    private dropdownOverlayRef;
    private dropdownButtonRef;
    constructor(props: any);
    render(): JSX.Element;
    toggleDropdown: () => void;
    closeDropdown: () => void;
    openDropdown: () => void;
    private onOpenStateChanged;
}
export {};
