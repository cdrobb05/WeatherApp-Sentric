import React from "react";
import { IntlShape } from "react-intl";
export interface IHeaderWorkspace {
    id: string;
    title: string;
    description: string;
    isDemo?: boolean;
}
export interface IHeaderWorkspacePickerProps {
    intl: IntlShape;
    className?: string;
    isLoading?: boolean;
    selectedWorkspace?: IHeaderWorkspace;
    workspaces?: IHeaderWorkspace[];
    totalWorkspacesCount?: number;
    searchString?: string;
    showSearch?: boolean;
    onOpen?: () => void;
    onSearch?: (searchString: string) => void;
    onSelect?: (item: IHeaderWorkspace) => void;
    onScrollEnd?: (visibleRowsStartIndex: number, visibleRowsEndIndex: number) => void;
    projectPickerFooter?: React.ReactNode;
}
export declare const CoreHeaderWorkspacePicker: React.FC<IHeaderWorkspacePickerProps>;
export declare const HeaderWorkspacePicker: React.ForwardRefExoticComponent<Pick<IHeaderWorkspacePickerProps, "className" | "onScrollEnd" | "isLoading" | "showSearch" | "searchString" | "onSearch" | "onSelect" | "workspaces" | "selectedWorkspace" | "totalWorkspacesCount" | "onOpen" | "projectPickerFooter"> & {
    forwardedRef?: React.Ref<any>;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<IHeaderWorkspacePickerProps>;
};
