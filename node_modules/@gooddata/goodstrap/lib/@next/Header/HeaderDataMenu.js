"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.HeaderDataMenu = exports.CoreHeaderDataMenu = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _uniqueId = _interopRequireDefault(require("lodash/uniqueId"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Button = _interopRequireDefault(require("../../Button/Button"));

var _BubbleHoverTrigger = _interopRequireDefault(require("../../Bubble/BubbleHoverTrigger"));

var _Bubble = _interopRequireDefault(require("../../Bubble/Bubble"));

// (C) 2020 GoodData Corporation
// @ts-ignore
// @ts-ignore
var CoreHeaderDataMenu = function CoreHeaderDataMenu(_ref) {
  var intl = _ref.intl,
      onMenuItemClick = _ref.onMenuItemClick,
      dataMenuItems = _ref.dataMenuItems,
      className = _ref.className;

  var renderSection = function renderSection(items) {
    return items.map(function (item) {
      var isDisable = item.isDisable,
          tooltipText = item.tooltipText,
          isActive = item.isActive,
          className = item.className,
          key = item.key,
          onClick = item.onClick;
      var classNames = (0, _classnames["default"])("gd-button-primary ".concat(className), {
        "is-active": isActive
      });
      var clickHandler = onClick ? onClick : function () {
        return onMenuItemClick(item);
      };
      return _react["default"].createElement("li", {
        key: key
      }, _react["default"].createElement(_BubbleHoverTrigger["default"], {
        tagName: "abbr",
        hideDelay: 100,
        showDelay: 100,
        className: "gd-bubble-trigger-data-menu"
      }, _react["default"].createElement(_Button["default"], {
        onClick: clickHandler,
        className: classNames,
        value: intl.formatMessage({
          id: "".concat(key)
        }),
        disabled: isDisable
      }), tooltipText && isDisable && _react["default"].createElement(_Bubble["default"], {
        alignPoints: [{
          align: "bc tc"
        }, {
          align: "tc bc"
        }, {
          align: "bl tl"
        }, {
          align: "br tr"
        }]
      }, tooltipText)));
    });
  };

  var dataMenuClassName = (0, _classnames["default"])("gd-data-header-menu-section", className);
  return _react["default"].createElement("div", {
    className: "gd-data-header-menu-wrapper"
  }, _react["default"].createElement("ul", {
    key: (0, _uniqueId["default"])("section-"),
    className: dataMenuClassName
  }, renderSection(dataMenuItems)));
};

exports.CoreHeaderDataMenu = CoreHeaderDataMenu;
var HeaderDataMenu = (0, _reactIntl.injectIntl)(CoreHeaderDataMenu);
exports.HeaderDataMenu = HeaderDataMenu;