"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = exports.MultiSelectListItem = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactIntl = require("react-intl");

var _classnames = _interopRequireDefault(require("classnames"));

var _jsUtils = require("@gooddata/js-utils");

var _intlShape = require("../core/intlShape");

// (C) 2007-2020 GoodData Corporation
var MultiSelectListItem = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2["default"])(MultiSelectListItem, _PureComponent);

  function MultiSelectListItem(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, MultiSelectListItem);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(MultiSelectListItem).call(this, props));
    _this.handleSelect = _this.handleSelect.bind((0, _assertThisInitialized2["default"])(_this));
    _this.handleMouseOver = _this.handleMouseOver.bind((0, _assertThisInitialized2["default"])(_this));
    _this.handleMouseOut = _this.handleMouseOut.bind((0, _assertThisInitialized2["default"])(_this));
    _this.handleOnly = _this.handleOnly.bind((0, _assertThisInitialized2["default"])(_this));
    return _this;
  }

  (0, _createClass2["default"])(MultiSelectListItem, [{
    key: "getClassNames",
    value: function getClassNames() {
      var _cx;

      return (0, _classnames["default"])((_cx = {
        "gd-list-item": true
      }, (0, _defineProperty2["default"])(_cx, "s-".concat(_jsUtils.string.simplifyText(this.props.source.title)), true), (0, _defineProperty2["default"])(_cx, "has-only-visible", true), (0, _defineProperty2["default"])(_cx, "is-selected", this.props.selected), _cx));
    }
  }, {
    key: "handleSelect",
    value: function handleSelect() {
      this.props.onSelect(this.props.source);
    }
  }, {
    key: "handleMouseOver",
    value: function handleMouseOver() {
      this.props.onMouseOver(this.props.source);
    }
  }, {
    key: "handleMouseOut",
    value: function handleMouseOut() {
      this.props.onMouseOut(this.props.source);
    }
  }, {
    key: "handleOnly",
    value: function handleOnly(ev) {
      ev.stopPropagation();
      this.props.onOnly(this.props.source);
    }
  }, {
    key: "renderOnly",
    value: function renderOnly() {
      return _react["default"].createElement("span", {
        className: "gd-list-item-only",
        onClick: this.handleOnly
      }, _react["default"].createElement(_reactIntl.FormattedMessage, {
        id: "gs.list.only"
      }));
    }
  }, {
    key: "render",
    value: function render() {
      return _react["default"].createElement("div", {
        className: this.getClassNames(),
        onClick: this.handleSelect,
        onMouseOver: this.handleMouseOver,
        onMouseOut: this.handleMouseOut
      }, _react["default"].createElement("label", {
        className: "input-checkbox-label"
      }, _react["default"].createElement("input", {
        type: "checkbox",
        className: "input-checkbox",
        readOnly: true,
        checked: this.props.selected
      }), _react["default"].createElement("span", {
        className: "input-label-text"
      }, this.props.source.title)), this.renderOnly());
    }
  }]);
  return MultiSelectListItem;
}(_react.PureComponent);

exports.MultiSelectListItem = MultiSelectListItem;
(0, _defineProperty2["default"])(MultiSelectListItem, "propTypes", {
  intl: _intlShape.intlShape.isRequired,
  isLoading: _propTypes["default"].bool,
  onMouseOut: _propTypes["default"].func,
  onMouseOver: _propTypes["default"].func,
  onOnly: _propTypes["default"].func,
  onSelect: _propTypes["default"].func,
  selected: _propTypes["default"].bool,
  source: _propTypes["default"].object
});
(0, _defineProperty2["default"])(MultiSelectListItem, "defaultProps", {
  isLoading: false,
  onMouseOver: function onMouseOver() {},
  onMouseOut: function onMouseOut() {},
  onOnly: function onOnly() {},
  onSelect: function onSelect() {},
  selected: false,
  source: {}
});

var _default = (0, _reactIntl.injectIntl)(MultiSelectListItem);

exports["default"] = _default;