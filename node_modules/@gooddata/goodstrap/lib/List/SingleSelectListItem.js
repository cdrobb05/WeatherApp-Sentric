"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _bindAll = _interopRequireDefault(require("lodash/bindAll"));

var _get = _interopRequireDefault(require("lodash/get"));

var _classnames = _interopRequireDefault(require("classnames"));

var _jsUtils = require("@gooddata/js-utils");

var _BubbleHoverTrigger = _interopRequireDefault(require("../Bubble/BubbleHoverTrigger"));

var _Bubble = _interopRequireDefault(require("../Bubble/Bubble"));

// (C) 2007-2020 GoodData Corporation
var BUBBLE_OFFSET_X = 16;

var SingleSelectListItem = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(SingleSelectListItem, _Component);

  function SingleSelectListItem() {
    var _this;

    (0, _classCallCheck2["default"])(this, SingleSelectListItem);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(SingleSelectListItem).call(this));
    _this.state = {
      isOverflowed: false
    };
    (0, _bindAll["default"])((0, _assertThisInitialized2["default"])(_this), ["handleSelect", "handleMouseOver", "handleMouseOut"]);
    return _this;
  }

  (0, _createClass2["default"])(SingleSelectListItem, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.checkOverflow();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.checkOverflow();
    }
  }, {
    key: "getClassNames",
    value: function getClassNames() {
      var _this$props = this.props,
          source = _this$props.source,
          selected = _this$props.selected;
      var generatedSeleniumClass = "s-".concat(_jsUtils.string.simplifyText(source.title));
      return (0, _classnames["default"])("gd-list-item", generatedSeleniumClass, {
        "is-selected": selected
      });
    }
  }, {
    key: "checkOverflow",
    value: function checkOverflow() {
      if (this.node) {
        // Checks if ellipsis has been applicated on title span
        var isOverflowed = this.node.offsetWidth < this.node.scrollWidth;

        if (isOverflowed !== this.state.isOverflowed) {
          // eslint-disable-next-line react/no-did-mount-set-state
          this.setState({
            isOverflowed: isOverflowed
          });
        }
      }
    }
  }, {
    key: "handleSelect",
    value: function handleSelect() {
      this.props.onSelect(this.props.source);
    }
  }, {
    key: "handleMouseOver",
    value: function handleMouseOver() {
      this.props.onMouseOver(this.props.source);
    }
  }, {
    key: "handleMouseOut",
    value: function handleMouseOut() {
      this.props.onMouseOut(this.props.source);
    }
  }, {
    key: "renderTitle",
    value: function renderTitle() {
      var _this2 = this;

      var title = this.props.source.title;

      var titleElement = _react["default"].createElement("span", {
        ref: function ref(node) {
          _this2.node = node;
        }
      }, title);

      if (this.state.isOverflowed) {
        return _react["default"].createElement(_BubbleHoverTrigger["default"], null, titleElement, _react["default"].createElement(_Bubble["default"], {
          className: "bubble-primary",
          alignPoints: [{
            align: "cr cl"
          }, {
            align: "cl cr"
          }],
          arrowOffsets: {
            "cr cl": [BUBBLE_OFFSET_X, 0],
            "cl cr": [-BUBBLE_OFFSET_X, 0]
          }
        }, title));
      }

      return titleElement;
    }
  }, {
    key: "renderIcon",
    value: function renderIcon(icon) {
      if (icon) {
        var iconClasses = (0, _classnames["default"])("gd-list-icon", icon);
        return _react["default"].createElement("span", {
          className: iconClasses
        });
      }

      return null;
    }
  }, {
    key: "render",
    value: function render() {
      var icon = (0, _get["default"])(this.props, "source.icon");
      return _react["default"].createElement("div", {
        className: this.getClassNames(),
        onClick: this.handleSelect,
        onMouseOver: this.handleMouseOver,
        onMouseOut: this.handleMouseOut
      }, this.renderIcon(icon), this.renderTitle());
    }
  }]);
  return SingleSelectListItem;
}(_react.Component);

exports["default"] = SingleSelectListItem;
(0, _defineProperty2["default"])(SingleSelectListItem, "propTypes", {
  source: _propTypes["default"].object.isRequired,
  selected: _propTypes["default"].bool.isRequired,
  onSelect: _propTypes["default"].func.isRequired,
  onMouseOver: _propTypes["default"].func,
  onMouseOut: _propTypes["default"].func
});
(0, _defineProperty2["default"])(SingleSelectListItem, "defaultProps", {
  onMouseOver: function onMouseOver() {},
  onMouseOut: function onMouseOut() {}
});