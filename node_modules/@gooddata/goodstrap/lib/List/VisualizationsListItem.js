"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _get = _interopRequireDefault(require("lodash/get"));

var _reactIntl = require("react-intl");

var _jsUtils = require("@gooddata/js-utils");

var _date = require("../data/date");

var _ShortenedText = _interopRequireDefault(require("../core/ShortenedText"));

var _Button = _interopRequireDefault(require("../Button/Button"));

var _VisualizationsListItemDate = _interopRequireDefault(require("./VisualizationsListItemDate"));

// (C) 2007-2020 GoodData Corporation
// eslint-disable-next-line import/no-unresolved, import/extensions
var VISUALIZATION_TYPE_UNKNOWN = "unknown";
var WIDGET_TYPE_KPI = "kpi";
var visualizationIconWidthAndPadding = 42;
var tooltipAlignPoints = [{
  align: "cr cl"
}, {
  align: "cl cr",
  offset: {
    x: -visualizationIconWidthAndPadding,
    y: 0
  }
}];

var VisualizationsListItem = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(VisualizationsListItem, _Component);

  function VisualizationsListItem(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, VisualizationsListItem);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(VisualizationsListItem).call(this, props));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "shortenedTextRef", (0, _react.createRef)());
    _this.onVisualizationDeleteRequest = _this.onVisualizationDeleteRequest.bind((0, _assertThisInitialized2["default"])(_this));
    return _this;
  }

  (0, _createClass2["default"])(VisualizationsListItem, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.width !== this.props.width && this.shortenedTextRef.current) {
        this.shortenedTextRef.current.recomputeShortening();
      }
    }
  }, {
    key: "onVisualizationDeleteRequest",
    value: function onVisualizationDeleteRequest(e) {
      e.stopPropagation();
      this.props.visualizationDeleteRequested(this.props.item);
    }
  }, {
    key: "isSelected",
    value: function isSelected() {
      var _this$props = this.props,
          selectedItem = _this$props.selectedItem,
          item = _this$props.item;
      return item.meta.uri && (0, _get["default"])(selectedItem, "meta.uri") === (0, _get["default"])(item, "meta.uri");
    }
  }, {
    key: "isLocked",
    value: function isLocked() {
      return !!this.props.item.meta.locked;
    }
  }, {
    key: "renderLock",
    value: function renderLock() {
      if (this.isLocked()) {
        return _react["default"].createElement("i", {
          className: "icon-lock"
        });
      }

      return false;
    }
  }, {
    key: "renderUpdatedDateTime",
    value: function renderUpdatedDateTime(date) {
      var item = this.props.item;

      if (!date) {
        return false;
      }

      if ((0, _get["default"])(item, ["content", "type"]) === WIDGET_TYPE_KPI) {
        return _react["default"].createElement("span", null);
      }

      return _react["default"].createElement(_VisualizationsListItemDate["default"], {
        config: (0, _date.getDateTimeConfig)(date, {})
      });
    }
  }, {
    key: "renderActions",
    value: function renderActions() {
      var _this$props2 = this.props,
          visualizationDeleteRequested = _this$props2.visualizationDeleteRequested,
          canDeleteLockedItem = _this$props2.canDeleteLockedItem;
      var canDeleteVisualization = !this.isLocked() || canDeleteLockedItem;
      var displayDeleteButton = !!visualizationDeleteRequested && canDeleteVisualization;
      return displayDeleteButton ? _react["default"].createElement("div", {
        className: "gd-visualizations-list-item-actions"
      }, _react["default"].createElement(_Button["default"], {
        className: "gd-button-link gd-button-icon-only gd-button-small icon-cross gd-visualizations-list-item-action-delete s-delete-item",
        onClick: this.onVisualizationDeleteRequest
      })) : false;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props$item = this.props.item,
          _this$props$item$meta = _this$props$item.meta,
          updated = _this$props$item$meta.updated,
          _this$props$item$meta2 = _this$props$item$meta.title,
          title = _this$props$item$meta2 === void 0 ? _react["default"].createElement(_reactIntl.FormattedMessage, {
        id: "gs.visualizationsList.loading"
      }) : _this$props$item$meta2,
          type = _this$props$item.content.type;
      var iconClassName = (0, _classnames["default"])("gd-vis-type", "gd-vis-type-".concat(type));
      var visualizationListItemClassname = (0, _classnames["default"])("gd-visualizations-list-item", "s-".concat(_jsUtils.string.simplifyText(title)), {
        "is-selected": this.isSelected(),
        "is-first": this.props.isFirst,
        "is-last": this.props.isLast
      });
      return _react["default"].createElement("div", {
        className: visualizationListItemClassname
      }, _react["default"].createElement("div", {
        className: iconClassName
      }), _react["default"].createElement("div", {
        className: "gd-visualizations-list-item-content"
      }, _react["default"].createElement("div", {
        className: "gd-visualizations-list-item-content-name"
      }, this.renderLock(), _react["default"].createElement(_ShortenedText["default"], {
        ref: this.shortenedTextRef,
        tooltipAlignPoints: tooltipAlignPoints
      }, title)), _react["default"].createElement("div", {
        className: "gd-visualizations-list-item-content-date"
      }, this.renderUpdatedDateTime(updated))), this.renderActions());
    }
  }]);
  return VisualizationsListItem;
}(_react.Component);

exports["default"] = VisualizationsListItem;
(0, _defineProperty2["default"])(VisualizationsListItem, "propTypes", {
  canDeleteLockedItem: _propTypes["default"].bool,
  isFirst: _propTypes["default"].bool,
  isLast: _propTypes["default"].bool,
  item: _propTypes["default"].shape({
    meta: _propTypes["default"].object.isRequired,
    content: _propTypes["default"].object
  }),
  selectedItem: _propTypes["default"].object,
  visualizationAdded: _propTypes["default"].func,
  visualizationAddingStarted: _propTypes["default"].func,
  visualizationDeleteRequested: _propTypes["default"].func,
  width: _propTypes["default"].number
});
(0, _defineProperty2["default"])(VisualizationsListItem, "defaultProps", {
  canDeleteLockedItem: false,
  isFirst: false,
  isLast: false,
  item: {
    meta: {},
    content: {
      type: VISUALIZATION_TYPE_UNKNOWN
    }
  },
  selectedItem: {},
  visualizationAdded: function visualizationAdded() {},
  visualizationAddingStarted: function visualizationAddingStarted() {},
  visualizationDeleteRequested: null,
  width: 0
});