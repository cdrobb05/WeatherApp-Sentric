"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty2 = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty2(exports, "__esModule", {
  value: true
});

exports["default"] = exports.InvertableList = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/define-property"));

var _defineProperties = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/define-properties"));

var _getOwnPropertyDescriptors = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/get-own-property-descriptors"));

var _getOwnPropertyDescriptor = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/get-own-property-descriptor"));

var _getOwnPropertySymbols = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/get-own-property-symbols"));

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _extends2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/extends"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/toConsumableArray"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));

var _defineProperty3 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactIntl = require("react-intl");

var _classnames = _interopRequireDefault(require("classnames"));

var _keyBy = _interopRequireDefault(require("lodash/keyBy"));

var _values = _interopRequireDefault(require("lodash/values"));

var _take = _interopRequireDefault(require("lodash/take"));

var _has = _interopRequireDefault(require("lodash/has"));

var _bindAll = _interopRequireDefault(require("lodash/bindAll"));

var _Guid = require("../core/Guid");

var _Input = _interopRequireDefault(require("../Form/Input"));

var _MultiSelectList = _interopRequireDefault(require("./MultiSelectList"));

var _MultiSelectListItem = _interopRequireDefault(require("./MultiSelectListItem"));

var _Message = _interopRequireDefault(require("../Messages/Message"));

var _intlShape = require("../core/intlShape");

function ownKeys(object, enumerableOnly) { var keys = (0, _keys["default"])(object); if (_getOwnPropertySymbols["default"]) { var symbols = (0, _getOwnPropertySymbols["default"])(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return (0, _getOwnPropertyDescriptor["default"])(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty3["default"])(target, key, source[key]); }); } else if (_getOwnPropertyDescriptors["default"]) { (0, _defineProperties["default"])(target, (0, _getOwnPropertyDescriptors["default"])(source)); } else { ownKeys(Object(source)).forEach(function (key) { (0, _defineProperty2["default"])(target, key, (0, _getOwnPropertyDescriptor["default"])(source, key)); }); } } return target; }

var NoItemsFound = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(NoItemsFound, _Component);

  function NoItemsFound() {
    (0, _classCallCheck2["default"])(this, NoItemsFound);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(NoItemsFound).apply(this, arguments));
  }

  (0, _createClass2["default"])(NoItemsFound, [{
    key: "render",
    value: function render() {
      return _react["default"].createElement("div", {
        className: "gd-list-noResults"
      }, _react["default"].createElement(_reactIntl.FormattedMessage, {
        id: "gs.list.noItemsFound"
      }));
    }
  }]);
  return NoItemsFound;
}(_react.Component);

var LoadingMessage = /*#__PURE__*/function (_Component2) {
  (0, _inherits2["default"])(LoadingMessage, _Component2);

  function LoadingMessage() {
    (0, _classCallCheck2["default"])(this, LoadingMessage);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(LoadingMessage).apply(this, arguments));
  }

  (0, _createClass2["default"])(LoadingMessage, [{
    key: "render",
    value: function render() {
      return _react["default"].createElement("div", null, "...");
    }
  }]);
  return LoadingMessage;
}(_react.Component);

var LimitHitWarning = /*#__PURE__*/function (_Component3) {
  (0, _inherits2["default"])(LimitHitWarning, _Component3);

  function LimitHitWarning() {
    (0, _classCallCheck2["default"])(this, LimitHitWarning);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(LimitHitWarning).apply(this, arguments));
  }

  (0, _createClass2["default"])(LimitHitWarning, [{
    key: "render",
    value: function render() {
      var classes = (0, _classnames["default"])("gd-list-limitExceeded", {
        "animation-fadeIn": this.props.bounce
      });
      return _react["default"].createElement(_Message["default"], {
        type: "warning",
        className: classes
      }, _react["default"].createElement(_reactIntl.FormattedMessage, {
        id: "gs.list.limitExceeded",
        values: {
          limit: this.props.limit
        }
      }));
    }
  }]);
  return LimitHitWarning;
}(_react.Component);

(0, _defineProperty3["default"])(LimitHitWarning, "propTypes", {
  limit: _propTypes["default"].number.isRequired,
  bounce: _propTypes["default"].bool.isRequired
});

var InvertableList = /*#__PURE__*/function (_Component4) {
  (0, _inherits2["default"])(InvertableList, _Component4);

  function InvertableList() {
    var _this;

    (0, _classCallCheck2["default"])(this, InvertableList);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(InvertableList).call(this));
    _this.state = {
      notifyLimitHit: false
    };
    (0, _bindAll["default"])((0, _assertThisInitialized2["default"])(_this), ["onSelect", "onSelectAll", "onSelectNone", "onSelectOnly", "onRangeChange"]);
    return _this;
  }

  (0, _createClass2["default"])(InvertableList, [{
    key: "onSelect",
    value: function onSelect(item) {
      var _this2 = this;

      var newSelection = this.toggleItemInSelection(item);

      if (newSelection.length <= this.props.maxSelectionSize) {
        this.notifyUpstreamOfSelectionChange(newSelection);
      }

      if (newSelection.length >= this.props.maxSelectionSize) {
        // Flash the limit exceeded info
        this.setState({
          notifyLimitHit: true
        }); // remove the class that causes flashing animation

        setTimeout(function () {
          _this2.setState({
            notifyLimitHit: false
          });
        }, 1000);
      }
    }
  }, {
    key: "onSelectAll",
    value: function onSelectAll() {
      if (this.props.searchString) {
        if (this.props.isInverted) {
          this.shrinkSelection();
        } else {
          this.growSelection();
        }
      } else {
        this.props.onSelect([], true);
      }
    }
  }, {
    key: "onSelectNone",
    value: function onSelectNone() {
      if (this.props.searchString) {
        if (this.props.isInverted) {
          this.growSelection();
        } else {
          this.shrinkSelection();
        }
      } else {
        this.props.onSelect([], false);
      }
    }
  }, {
    key: "onSelectOnly",
    value: function onSelectOnly(item) {
      this.props.onSelect([item], false);
    }
  }, {
    key: "onSearchChange",
    value: function onSearchChange(searchString) {
      this.props.onSearch(searchString);
    }
  }, {
    key: "onRangeChange",
    value: function onRangeChange() {
      var _this$props;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      (_this$props = this.props).onRangeChange.apply(_this$props, [this.props.searchString].concat(args));
    }
    /**
     * Remove selected visible items from selection.
     */

  }, {
    key: "shrinkSelection",
    value: function shrinkSelection() {
      var _this$props2 = this.props,
          items = _this$props2.items,
          selection = _this$props2.selection;
      var visibleSelection = this.intersectItems(items, selection);
      var newSelection = this.subtractItems(selection, visibleSelection);
      this.notifyUpstreamOfSelectionChange(newSelection);
    }
  }, {
    key: "intersectItems",
    value: function intersectItems(items, otherItems) {
      var _this3 = this;

      var otherItemsMap = this.indexByKey(otherItems);
      return items.filter(function (item) {
        var itemKey = _this3.props.getItemKey(item);

        return !!otherItemsMap[itemKey];
      });
    }
  }, {
    key: "subtractItems",
    value: function subtractItems(items, otherItems) {
      var _this4 = this;

      var otherItemsMap = this.indexByKey(otherItems);
      return items.filter(function (item) {
        var itemKey = _this4.props.getItemKey(item);

        return !otherItemsMap[itemKey];
      });
    }
  }, {
    key: "indexByKey",
    value: function indexByKey() {
      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      return (0, _keyBy["default"])(items, this.props.getItemKey);
    }
  }, {
    key: "toggleItemInSelection",
    value: function toggleItemInSelection(item) {
      var selectionMap = this.indexByKey(this.props.selection);
      var itemKey = this.props.getItemKey(item);

      if (selectionMap[itemKey]) {
        delete selectionMap[itemKey];
      } else {
        selectionMap[itemKey] = item;
      }

      return (0, _values["default"])(selectionMap);
    }
    /**
     * Add unselected visible items to the selection until selection size limit is reached.
     */

  }, {
    key: "growSelection",
    value: function growSelection() {
      var _this$props3 = this.props,
          maxSelectionSize = _this$props3.maxSelectionSize,
          items = _this$props3.items,
          selection = _this$props3.selection;
      var selectionSizeLeft = maxSelectionSize - selection.length;
      var selectableItems = this.subtractItems(items, selection);
      var itemsToSelect = (0, _take["default"])(selectableItems, selectionSizeLeft);
      var newSelection = [].concat((0, _toConsumableArray2["default"])(selection), (0, _toConsumableArray2["default"])(itemsToSelect));
      this.notifyUpstreamOfSelectionChange(newSelection);
    }
    /**
     * If change in selection happens to select all or unselect all items it is converted
     * to the respective empty selectionj.
     */

  }, {
    key: "notifyUpstreamOfSelectionChange",
    value: function notifyUpstreamOfSelectionChange(newSelection) {
      var itemsCount = this.props.itemsCount;
      var isInverted = this.props.isInverted;
      var selection;
      var lastItemSelected = !isInverted && newSelection.length === itemsCount;

      if (lastItemSelected) {
        selection = [];
        isInverted = !isInverted;
      } else {
        selection = newSelection;
      }

      this.props.onSelect(selection, isInverted);
    }
  }, {
    key: "isItemChecked",
    value: function isItemChecked(selectionMap, item) {
      var key = this.props.getItemKey(item);
      var itemInSelection = (0, _has["default"])(selectionMap, key); // in inverted mode selection lists unchecked items
      // in normal mode selection contains checked items

      return this.props.isInverted ? !itemInSelection : itemInSelection;
    }
  }, {
    key: "renderLimitHitWarning",
    value: function renderLimitHitWarning() {
      var _this$props4 = this.props,
          maxSelectionSize = _this$props4.maxSelectionSize,
          selection = _this$props4.selection;
      var limitHit = selection.length >= maxSelectionSize;

      if (limitHit) {
        return _react["default"].createElement(this.props.limitHitWarningClass, {
          limit: maxSelectionSize,
          bounce: this.state.notifyLimitHit
        });
      }

      return null;
    }
  }, {
    key: "renderSearchField",
    value: function renderSearchField() {
      return this.props.showSearchField ? _react["default"].createElement(_Input["default"], {
        autofocus: true,
        className: "gd-list-searchfield gd-flex-item-mobile",
        clearOnEsc: true,
        isSearch: true,
        isSmall: this.props.smallSearch,
        onChange: this.props.onSearch,
        placeholder: this.props.searchPlaceholder,
        value: this.props.searchString
      }) : null;
    }
  }, {
    key: "renderList",
    value: function renderList() {
      return this.props.isLoading ? this.renderLoading() : _react["default"].createElement("div", {
        className: "gd-flex-item-stretch-mobile gd-flex-row-container-mobile"
      }, this.renderListOrNoItems(), this.renderLimitHitWarning());
    }
  }, {
    key: "renderListOrNoItems",
    value: function renderListOrNoItems() {
      var _this$props5 = this.props,
          items = _this$props5.items,
          searchString = _this$props5.searchString,
          filteredItemsCount = _this$props5.filteredItemsCount,
          height = _this$props5.height,
          selection = _this$props5.selection;

      if (searchString && filteredItemsCount === 0) {
        return _react["default"].createElement(this.props.noItemsFoundClass, {
          height: height
        });
      }

      var selectionMap = this.indexByKey(selection);
      var isChecked = this.isItemChecked.bind(this, selectionMap);

      var listProps = _objectSpread({}, this.props, {
        itemsCount: filteredItemsCount
      });

      return _react["default"].createElement(_MultiSelectList["default"], (0, _extends2["default"])({}, listProps, {
        onSelect: this.onSelect,
        onSelectAll: this.onSelectAll,
        onSelectNone: this.onSelectNone,
        onSelectOnly: this.onSelectOnly,
        items: items,
        isSelected: isChecked // eslint-disable-line react/jsx-no-bind
        ,
        isSearching: !!searchString.length,
        listItemClass: this.props.listItemClass,
        onRangeChange: this.onRangeChange,
        tagName: this.props.tagName
      }));
    }
  }, {
    key: "renderLoading",
    value: function renderLoading() {
      return _react["default"].createElement(this.props.isLoadingClass, {
        height: this.props.height
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props6 = this.props,
          isMobile = _this$props6.isMobile,
          className = _this$props6.className;
      var classNames = (0, _classnames["default"])(className, {
        "gd-flex-item-stretch-mobile": isMobile,
        "gd-flex-row-container-mobile": isMobile
      });
      return _react["default"].createElement("div", {
        className: classNames
      }, this.renderSearchField(), this.renderList());
    }
  }]);
  return InvertableList;
}(_react.Component);

exports.InvertableList = InvertableList;
(0, _defineProperty3["default"])(InvertableList, "propTypes", {
  className: _propTypes["default"].string,
  filteredItemsCount: _propTypes["default"].number.isRequired,
  getItemKey: _propTypes["default"].func,
  height: _propTypes["default"].number.isRequired,
  intl: _intlShape.intlShape.isRequired,
  isInverted: _propTypes["default"].bool,
  isLoading: _propTypes["default"].bool,
  isLoadingClass: _propTypes["default"].func.isRequired,
  isMobile: _propTypes["default"].bool,
  itemHeight: _propTypes["default"].number.isRequired,
  items: _propTypes["default"].array.isRequired,
  itemsCount: _propTypes["default"].number.isRequired,
  limitHitWarningClass: _propTypes["default"].func.isRequired,
  listItemClass: _propTypes["default"].func,
  maxSelectionSize: _propTypes["default"].number.isRequired,
  noItemsFound: _propTypes["default"].bool,
  noItemsFoundClass: _propTypes["default"].func.isRequired,
  onRangeChange: _propTypes["default"].func,
  onSearch: _propTypes["default"].func.isRequired,
  onSelect: _propTypes["default"].func,
  searchPlaceholder: _propTypes["default"].string,
  searchString: _propTypes["default"].string,
  selection: _propTypes["default"].array,
  showSearchField: _propTypes["default"].bool,
  smallSearch: _propTypes["default"].bool,
  tagName: _propTypes["default"].string,
  width: _propTypes["default"].number,
  actionsAsCheckboxes: _propTypes["default"].bool
});
(0, _defineProperty3["default"])(InvertableList, "defaultProps", {
  actionsAsCheckboxes: false,
  className: undefined,
  getItemKey: _Guid.guidFor,
  isInverted: true,
  isLoading: false,
  isLoadingClass: LoadingMessage,
  isMobile: false,
  limitHitWarningClass: (0, _reactIntl.injectIntl)(LimitHitWarning),
  listItemClass: _MultiSelectListItem["default"],
  noItemsFound: false,
  noItemsFoundClass: (0, _reactIntl.injectIntl)(NoItemsFound),
  onRangeChange: function onRangeChange() {},
  onSelect: function onSelect() {},
  searchPlaceholder: "",
  searchString: "",
  selection: [],
  showSearchField: true,
  smallSearch: false,
  tagName: ""
});

var _default = (0, _reactIntl.injectIntl)(InvertableList);

exports["default"] = _default;