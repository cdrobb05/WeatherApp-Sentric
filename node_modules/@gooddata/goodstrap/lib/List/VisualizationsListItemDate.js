"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactIntl = require("react-intl");

// (C) 2007-2020 GoodData Corporation
var VisualizationsListItemDate = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(VisualizationsListItemDate, _Component);

  function VisualizationsListItemDate() {
    (0, _classCallCheck2["default"])(this, VisualizationsListItemDate);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(VisualizationsListItemDate).apply(this, arguments));
  }

  (0, _createClass2["default"])(VisualizationsListItemDate, [{
    key: "render",
    value: function render() {
      var config = this.props.config;
      var relativeDate = config.isToday ? "gs.date.today" : "gs.date.yesterday";

      if (config.isToday || config.isYesterday) {
        return _react["default"].createElement("span", null, _react["default"].createElement(_reactIntl.FormattedMessage, {
          id: relativeDate
        }), "\xA0", _react["default"].createElement(_reactIntl.FormattedMessage, {
          id: "gs.date.at"
        }), "\xA0", _react["default"].createElement(_reactIntl.FormattedTime, {
          value: config.date,
          format: "hhmm"
        }));
      } else if (config.isCurrentYear) {
        return _react["default"].createElement(_reactIntl.FormattedDate, {
          value: config.date,
          format: "shortWithoutYear"
        });
      }

      return _react["default"].createElement(_reactIntl.FormattedDate, {
        value: config.date,
        format: "shortWithYear"
      });
    }
  }]);
  return VisualizationsListItemDate;
}(_react.Component);

exports["default"] = VisualizationsListItemDate;
VisualizationsListItemDate.propTypes = {
  config: _propTypes["default"].shape({
    isCurrentYear: _propTypes["default"].bool.isRequired,
    isToday: _propTypes["default"].bool.isRequired,
    isYesterday: _propTypes["default"].bool.isRequired,
    date: _propTypes["default"].instanceOf(Date)
  }).isRequired
};