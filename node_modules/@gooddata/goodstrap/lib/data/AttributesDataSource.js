"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty2 = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty2(exports, "__esModule", {
  value: true
});

exports["default"] = createDataSource;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/define-property"));

var _defineProperties = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/define-properties"));

var _getOwnPropertyDescriptors = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/get-own-property-descriptors"));

var _getOwnPropertyDescriptor = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/get-own-property-descriptor"));

var _getOwnPropertySymbols = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/get-own-property-symbols"));

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _stringify = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/json/stringify"));

var _defineProperty3 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _partial = _interopRequireDefault(require("lodash/partial"));

var _DataSource = _interopRequireWildcard(require("./DataSource"));

function ownKeys(object, enumerableOnly) { var keys = (0, _keys["default"])(object); if (_getOwnPropertySymbols["default"]) { var symbols = (0, _getOwnPropertySymbols["default"])(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return (0, _getOwnPropertyDescriptor["default"])(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty3["default"])(target, key, source[key]); }); } else if (_getOwnPropertyDescriptors["default"]) { (0, _defineProperties["default"])(target, (0, _getOwnPropertyDescriptors["default"])(source)); } else { ownKeys(Object(source)).forEach(function (key) { (0, _defineProperty2["default"])(target, key, (0, _getOwnPropertyDescriptor["default"])(source, key)); }); } } return target; }

function getAttributes(sdk, options, requestOptions) {
  var projectId = options.projectId,
      tagsConfiguration = options.tagsConfiguration;
  var catalogUri = "/gdc/internal/projects/".concat(projectId, "/loadCatalog");
  var catalogSetting = {
    catalogRequest: _objectSpread({
      skipContent: 0,
      types: ["attribute"],
      paging: {
        offset: requestOptions.page * requestOptions.itemsPerPage,
        limit: requestOptions.itemsPerPage
      }
    }, (0, _DataSource.getIncludeExcludeTagsPayload)(tagsConfiguration))
  };

  if (requestOptions.searchString) {
    catalogSetting.catalogRequest.filter = requestOptions.searchString;
  }

  var $promise = sdk.xhr.post(catalogUri, {
    data: (0, _stringify["default"])(catalogSetting)
  });
  return $promise.then(function (response) {
    return response.getData();
  }).then(function (response) {
    var items = response.catalogResponse.catalog;
    var totalCount = response.catalogResponse.totals.available;
    return {
      totalCount: totalCount,
      page: requestOptions.page,
      items: items.map(function (attributeItem) {
        return attributeItem.attribute;
      })
    };
  });
}

function createDataSource(sdk, options) {
  return new _DataSource["default"]({
    itemsPerPage: 20,
    requestHandler: (0, _partial["default"])(getAttributes, sdk, options)
  });
}