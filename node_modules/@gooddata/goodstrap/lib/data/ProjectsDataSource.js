"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.processProjectInfo = processProjectInfo;
exports["default"] = createDataSource;

var _querystringify = _interopRequireDefault(require("querystringify"));

var _last = _interopRequireDefault(require("lodash/last"));

var _partial = _interopRequireDefault(require("lodash/partial"));

var _DataSource = _interopRequireDefault(require("./DataSource"));

// (C) 2007-2020 GoodData Corporation
function processProjectInfo(project) {
  var userProject = project.userProject;
  var uri = userProject.links.self;
  return {
    uri: uri,
    hash: (0, _last["default"])(uri.split("/")),
    title: userProject.projectTitle,
    isDemo: userProject.demoProject || false
  };
}

function getProjects(sdk, profileUri) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var uri = "/gdc/internal/projects/";
  var userId = (0, _last["default"])(profileUri.split("/"));
  var data = {
    userId: userId,
    userState: "ENABLED",
    projectStates: "ENABLED",
    offset: options.page * options.itemsPerPage,
    limit: options.itemsPerPage
  };

  if (options.searchString) {
    data.titleSubstring = options.searchString;
  }

  var $promise = sdk.xhr.get("".concat(uri, "?").concat(_querystringify["default"].stringify(data)));
  return $promise.then(function (response) {
    return response.getData();
  }).then(function (response) {
    var _response$userProject = response.userProjects,
        items = _response$userProject.items,
        paging = _response$userProject.paging;
    return {
      page: options.page,
      items: items.map(processProjectInfo),
      totalCount: paging.totalCount
    };
  });
}

function createDataSource(sdk, profileUri) {
  return new _DataSource["default"]({
    requestHandler: (0, _partial["default"])(getProjects, sdk, profileUri)
  });
}