import * as React from "react";
import * as PropTypes from "prop-types";
interface IButtonProps {
    className?: string;
    disabled?: boolean;
    tabIndex?: number;
    tagName?: string;
    title?: string;
    type?: string;
    value?: string;
    iconLeft?: string;
    iconRight?: string;
    onClick?(e: React.MouseEvent): void;
}
export default class Button extends React.Component<IButtonProps> {
    static propTypes: {
        className: PropTypes.Requireable<string>;
        disabled: PropTypes.Requireable<boolean>;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        tabIndex: PropTypes.Requireable<number>;
        tagName: PropTypes.Requireable<string>;
        title: PropTypes.Requireable<string>;
        type: PropTypes.Requireable<string>;
        value: PropTypes.Requireable<string>;
        iconLeft: PropTypes.Requireable<string>;
        iconRight: PropTypes.Requireable<string>;
    };
    static defaultProps: {
        className: string;
        disabled: boolean;
        onClick: (...args: any[]) => void;
        tabIndex: number;
        tagName: string;
        title: string;
        type: string;
        value: string;
        iconLeft: any;
        iconRight: any;
    };
    buttonNode: HTMLElement;
    render(): JSX.Element;
    private getClassnames;
    private _onClick;
    private renderIcon;
}
export {};
