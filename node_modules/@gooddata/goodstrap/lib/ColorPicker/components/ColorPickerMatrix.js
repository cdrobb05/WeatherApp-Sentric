"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = require("../utils");

// (C) 2007-2020 GoodData Corporation
var ColorPickerMatrix = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2["default"])(ColorPickerMatrix, _PureComponent);

  function ColorPickerMatrix() {
    (0, _classCallCheck2["default"])(this, ColorPickerMatrix);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ColorPickerMatrix).apply(this, arguments));
  }

  (0, _createClass2["default"])(ColorPickerMatrix, [{
    key: "render",
    value: function render() {
      return _react["default"].createElement("div", {
        className: "color-picker-component"
      }, _react["default"].createElement(ColorPickerRow, {
        lightness: 0.7,
        initColor: this.props.initColor,
        onColorSelected: this.props.onColorSelected
      }), _react["default"].createElement(ColorPickerRow, {
        lightness: 0.5,
        initColor: this.props.initColor,
        onColorSelected: this.props.onColorSelected
      }), _react["default"].createElement(ColorPickerRow, {
        lightness: 0.3,
        initColor: this.props.initColor,
        onColorSelected: this.props.onColorSelected
      }));
    }
  }]);
  return ColorPickerMatrix;
}(_react.PureComponent);

exports["default"] = ColorPickerMatrix;
(0, _defineProperty2["default"])(ColorPickerMatrix, "propTypes", {
  initColor: _propTypes["default"].shape({
    h: _propTypes["default"].number,
    s: _propTypes["default"].number,
    l: _propTypes["default"].number
  }).isRequired,
  onColorSelected: _propTypes["default"].func.isRequired
});

var ColorPickerRow = /*#__PURE__*/function (_PureComponent2) {
  (0, _inherits2["default"])(ColorPickerRow, _PureComponent2);

  function ColorPickerRow() {
    (0, _classCallCheck2["default"])(this, ColorPickerRow);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ColorPickerRow).apply(this, arguments));
  }

  (0, _createClass2["default"])(ColorPickerRow, [{
    key: "getCellClassNames",
    value: function getCellClassNames(hslColor) {
      return (0, _classnames["default"])("color-picker-cell", "s-color-".concat(Math.floor(hslColor.h + (hslColor.s + hslColor.l) * 100)));
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      return _react["default"].createElement("div", {
        className: "color-picker-row"
      }, _utils.SATURATION_ARRAY.map(function (saturation) {
        var newColor = {
          h: _this.props.initColor.h,
          s: saturation,
          l: _this.props.lightness
        };
        return _react["default"].createElement("div", {
          tabIndex: -1,
          key: _this.props.lightness + saturation,
          className: _this.getCellClassNames(newColor),
          style: (0, _utils.getColorStyle)(newColor),
          onClick: function onClick() {
            return _this.props.onColorSelected(newColor);
          }
        });
      }));
    }
  }]);
  return ColorPickerRow;
}(_react.PureComponent);

(0, _defineProperty2["default"])(ColorPickerRow, "propTypes", {
  lightness: _propTypes["default"].number.isRequired,
  initColor: _propTypes["default"].shape({
    h: _propTypes["default"].number,
    s: _propTypes["default"].number,
    l: _propTypes["default"].number
  }).isRequired,
  onColorSelected: _propTypes["default"].func.isRequired
});