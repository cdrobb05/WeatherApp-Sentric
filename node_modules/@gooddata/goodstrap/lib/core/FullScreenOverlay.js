"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _merge = _interopRequireDefault(require("lodash/merge"));

var _Overlay2 = _interopRequireDefault(require("./Overlay"));

// (C) 2007-2020 GoodData Corporation
var ReactFullScreenOverlay = /*#__PURE__*/function (_Overlay) {
  (0, _inherits2["default"])(ReactFullScreenOverlay, _Overlay);

  function ReactFullScreenOverlay(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, ReactFullScreenOverlay);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ReactFullScreenOverlay).call(this, props));
    _this.state = (0, _merge["default"])(_this.state, {
      position: {},
      overflow: "auto",
      scrollTop: 0
    });
    return _this;
  }

  (0, _createClass2["default"])(ReactFullScreenOverlay, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _document = document,
          body = _document.body;

      var _getComputedStyle = getComputedStyle(body),
          overflow = _getComputedStyle.overflow;

      var scrollTop = body.scrollTop;
      this.setState({
        overflow: overflow,
        scrollTop: scrollTop
      });
      body.style.overflow = "hidden";
      body.scrollTop = 0;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(ReactFullScreenOverlay.prototype), "componentWillUnmount", this).call(this);
      var _document2 = document,
          body = _document2.body;
      body.style.overflow = this.state.overflow;
      body.scrollTop = this.state.scrollTop;
    }
  }, {
    key: "getOverlayStyles",
    value: function getOverlayStyles() {
      return {
        position: "fixed",
        left: 0,
        top: 0,
        bottom: 0,
        right: 0
      };
    }
  }]);
  return ReactFullScreenOverlay;
}(_Overlay2["default"]);

exports["default"] = ReactFullScreenOverlay;