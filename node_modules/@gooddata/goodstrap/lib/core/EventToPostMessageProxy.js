"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = exports.eventTransformer = exports.sanitizeEvent = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _jsUtils = require("@gooddata/js-utils");

var _immutable = require("immutable");

var _forIn = _interopRequireDefault(require("lodash/forIn"));

var _isEmpty = _interopRequireDefault(require("lodash/isEmpty"));

var _isFunction = _interopRequireDefault(require("lodash/isFunction"));

var _isObject = _interopRequireDefault(require("lodash/isObject"));

var _isUndefined = _interopRequireDefault(require("lodash/isUndefined"));

var _isArray = _interopRequireDefault(require("lodash/isArray"));

var _identity = _interopRequireDefault(require("lodash/identity"));

var _clone = _interopRequireDefault(require("lodash/clone"));

// (C) 2007-2020 GoodData Corporation
var sanitizeEvent = function sanitizeEvent(eventDetail) {
  var detail = (0, _clone["default"])(eventDetail);
  /** Helper function created for the sake of preventing argument manipulation */

  var sanitizer = function sanitizer(objToClean) {
    (0, _forIn["default"])(objToClean, function (value, key) {
      if ((0, _isObject["default"])(value)) {
        var sanitized = sanitizer(value);

        if ((0, _isEmpty["default"])(sanitized)) {
          delete objToClean[key]; // eslint-disable-line no-param-reassign
        }
      } else if ((0, _isFunction["default"])(value)) {
        delete objToClean[key]; // eslint-disable-line no-param-reassign
      }

      if ((0, _isArray["default"])(value)) {
        var filteredArr = value.filter(function (element) {
          return !(0, _isUndefined["default"])(element);
        });
        objToClean[key] = filteredArr; // eslint-disable-line no-param-reassign
      }
    });
    return objToClean;
  };

  return sanitizer(detail);
};

exports.sanitizeEvent = sanitizeEvent;

var eventTransformer = function eventTransformer(detail, transformEvent) {
  var transform = transformEvent || _identity["default"];
  return sanitizeEvent(transform(detail));
};

exports.eventTransformer = eventTransformer;

var EventToPostMessageProxy = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(EventToPostMessageProxy, _Component);

  function EventToPostMessageProxy(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, EventToPostMessageProxy);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(EventToPostMessageProxy).call(this, props));
    _this.node = null;
    _this.eventHandlers = [];
    return _this;
  }

  (0, _createClass2["default"])(EventToPostMessageProxy, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.addListeners(this.props.events);
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (!this.props.events.equals(nextProps.events)) {
        this.removeListeners();
        this.addListeners(nextProps.events);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.removeListeners();
    }
  }, {
    key: "onEventReceived",
    value: function onEventReceived(eventName, e) {
      if (this.props.stopPropagation) {
        e.stopPropagation();
      }

      _jsUtils.postEvents.postEvent(this.props.product, eventName, eventTransformer(e.detail, this.props.transformEvent));
    }
  }, {
    key: "addListeners",
    value: function addListeners(events) {
      var _this2 = this;

      events.forEach(function (eventName) {
        var handler = _this2.onEventReceived.bind(_this2, eventName);

        _this2.eventHandlers.push([eventName, handler]);

        _this2.node.addEventListener(eventName, handler);
      });
    }
  }, {
    key: "removeListeners",
    value: function removeListeners() {
      var _this3 = this;

      this.eventHandlers.forEach(function (args) {
        var _this3$node;

        (_this3$node = _this3.node).removeEventListener.apply(_this3$node, (0, _toConsumableArray2["default"])(args));
      });
      this.eventHandlers = [];
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var children = this.props.children;
      return _react["default"].createElement("div", {
        ref: function ref(node) {
          _this4.node = node;
        }
      }, children);
    }
  }]);
  return EventToPostMessageProxy;
}(_react.Component);

exports["default"] = EventToPostMessageProxy;
(0, _defineProperty2["default"])(EventToPostMessageProxy, "propTypes", {
  product: _propTypes["default"].string.isRequired,
  children: _propTypes["default"].element.isRequired,
  events: _propTypes["default"].instanceOf(_immutable.List).isRequired,
  stopPropagation: _propTypes["default"].bool,
  transformEvent: _propTypes["default"].func
});
(0, _defineProperty2["default"])(EventToPostMessageProxy, "defaultProps", {
  stopPropagation: false,
  transformEvent: undefined
});