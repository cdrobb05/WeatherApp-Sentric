"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2019 GoodData Corporation
var Cookies = __importStar(require("js-cookie"));
var get_1 = __importDefault(require("lodash/get"));
var LOCALE_COOKIE_NAME = 'locale';
/**
 * Checks if cookies are enabled.
 * @returns {Boolean}
 */
function areCookiesEnabled() {
    var TEST_COOKIE_NAME = 'cookiename';
    var TEST_COOKIE_VALUE = 'cookievalue';
    if (!navigator.cookieEnabled) {
        return false;
    }
    Cookies.set(TEST_COOKIE_NAME, TEST_COOKIE_VALUE);
    var cookiesEnabled = Cookies.get(TEST_COOKIE_NAME) === TEST_COOKIE_VALUE;
    Cookies.remove(TEST_COOKIE_NAME);
    return cookiesEnabled;
}
/**
 * Gets locale from cookies.
 * @returns {String|undefined}
 */
function getLocale() {
    return Cookies.get(LOCALE_COOKIE_NAME);
}
/**
 * Sets locale into cookies.
 * @param {String} value Value to be set as new locale.
 * @param {Number} [days=60] Expiration period in days.
 */
function setLocale(value, days) {
    if (days === void 0) { days = 60; }
    Cookies.set(LOCALE_COOKIE_NAME, value, { expires: days });
}
/**
 * Set/override locale stored in cookies to whatever locale arrives in bootstrapResource.
 * @param {Object} data Response from bootstrapResource with user preferred language.
 * @param {Array} [localeKeys] Array of supported locale (xx-XX, e.g. de-DE)
 * @param {String} [localeDefault=en-US] Default locale when user preferred language is not supported.
 * @param {Object} [deps] Dependencies for testing purposes.
 */
function syncCookieWithBootstrap(data, localeKeys, localeDefault, deps) {
    if (localeKeys === void 0) { localeKeys = []; }
    if (localeDefault === void 0) { localeDefault = 'en-US'; }
    if (deps === void 0) { deps = {}; }
    var _a = deps.getLocaleCookie, getLocaleCookie = _a === void 0 ? getLocale : _a, _b = deps.setLocaleCookie, setLocaleCookie = _b === void 0 ? setLocale : _b, _c = deps.cookiesEnabled, cookiesEnabled = _c === void 0 ? areCookiesEnabled : _c;
    var localeBootstrap = get_1.default(data, ['bootstrapResource', 'accountSetting', 'language']);
    var localeCookie = getLocaleCookie();
    var locale = localeKeys.includes(localeBootstrap) ? localeBootstrap : localeDefault;
    if (cookiesEnabled() && (localeCookie !== locale)) {
        setLocaleCookie(locale);
    }
}
exports.syncCookieWithBootstrap = syncCookieWithBootstrap;
//# sourceMappingURL=cookies.js.map