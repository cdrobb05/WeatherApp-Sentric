import { EmbeddedGdc } from '@gooddata/typings';
export declare const EXTERNAL_DATE_FILTER_FORMAT = "YYYY-MM-DD";
export interface IExternalFiltersObject {
    attributeFilters: ITransformedAttributeFilterItem[];
    dateFilters: ITransformedDateFilterItem[];
}
export interface ITransformedDateFilterItem {
    granularity?: string;
    from: string | number;
    to: string | number;
    datasetUri?: string;
    datasetIdentifier?: string;
}
export interface ITransformedAttributeFilterItem {
    negativeSelection: boolean;
    attributeElements: string[];
    dfIdentifier?: string;
    dfUri?: string;
}
export declare const ALL_TIME_GRANULARITY = "ALL_TIME_GRANULARITY";
export declare type ITransformedFilterItem = ITransformedDateFilterItem | ITransformedAttributeFilterItem;
export declare function isValidDateFilterFormat(filterItem: EmbeddedGdc.DateFilterItem, shouldValidateDataSet?: boolean): boolean;
export declare function isValidFilterItemFormat(filterItem: any, shouldValidateDataSet?: boolean): boolean;
export declare function isValidRemoveFilterItemFormat(filterItem: any): boolean;
export declare function isValidRemoveFiltersFormat(filters: any[]): boolean;
export declare function isValidFiltersFormat(filters: any[], shouldValidateDataSet?: boolean): boolean;
export declare function getObjectUriIdentifier(obj: EmbeddedGdc.ObjQualifier | undefined): {
    uri?: string;
    identifier?: string;
};
export declare function transformFilterContext(filters: EmbeddedGdc.FilterItem[]): IExternalFiltersObject;
export declare function isTransformedDateFilterItem(filterItem: ITransformedFilterItem): filterItem is ITransformedDateFilterItem;
export declare function isTransformedAttributeFilterItem(filterItem: ITransformedFilterItem): filterItem is ITransformedAttributeFilterItem;
export declare function isAllTimeDateFilterItem(filterItem: ITransformedFilterItem): boolean;
export declare function isAllValueAttributeFilterItem(filterItem: ITransformedFilterItem): boolean;
