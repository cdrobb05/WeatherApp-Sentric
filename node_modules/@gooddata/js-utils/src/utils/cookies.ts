// (C) 2007-2019 GoodData Corporation
import * as Cookies from 'js-cookie';
import get from 'lodash/get';

const LOCALE_COOKIE_NAME = 'locale';

/**
 * Checks if cookies are enabled.
 * @returns {Boolean}
 */
function areCookiesEnabled(): boolean {
    const TEST_COOKIE_NAME = 'cookiename';
    const TEST_COOKIE_VALUE = 'cookievalue';

    if (!navigator.cookieEnabled) {
        return false;
    }

    Cookies.set(TEST_COOKIE_NAME, TEST_COOKIE_VALUE);
    const cookiesEnabled = Cookies.get(TEST_COOKIE_NAME) === TEST_COOKIE_VALUE;
    Cookies.remove(TEST_COOKIE_NAME);

    return cookiesEnabled;
}

/**
 * Gets locale from cookies.
 * @returns {String|undefined}
 */
function getLocale(): string | undefined {
    return Cookies.get(LOCALE_COOKIE_NAME);
}

/**
 * Sets locale into cookies.
 * @param {String} value Value to be set as new locale.
 * @param {Number} [days=60] Expiration period in days.
 */
function setLocale(value: string, days: number = 60): void {
    Cookies.set(LOCALE_COOKIE_NAME, value, { expires: days });
}

/**
 * Set/override locale stored in cookies to whatever locale arrives in bootstrapResource.
 * @param {Object} data Response from bootstrapResource with user preferred language.
 * @param {Array} [localeKeys] Array of supported locale (xx-XX, e.g. de-DE)
 * @param {String} [localeDefault=en-US] Default locale when user preferred language is not supported.
 * @param {Object} [deps] Dependencies for testing purposes.
 */
export function syncCookieWithBootstrap(
    data: any, localeKeys: string[] = [], localeDefault: string = 'en-US', deps: any = {}
): void {
    const {
        getLocaleCookie = getLocale,
        setLocaleCookie = setLocale,
        cookiesEnabled = areCookiesEnabled
    } = deps;

    const localeBootstrap = get(data, ['bootstrapResource', 'accountSetting', 'language']);
    const localeCookie = getLocaleCookie();
    const locale = localeKeys.includes(localeBootstrap) ? localeBootstrap : localeDefault;

    if (cookiesEnabled() && (localeCookie !== locale)) {
        setLocaleCookie(locale);
    }
}
