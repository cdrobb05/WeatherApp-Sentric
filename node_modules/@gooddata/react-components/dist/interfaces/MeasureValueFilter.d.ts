import { AFM } from "@gooddata/typings";
export interface IMeasureValueFilterValue {
    value?: number;
    from?: number;
    to?: number;
}
export declare const isComparisonOperator: (operator: string) => operator is AFM.ComparisonConditionOperator;
export declare const isRangeOperator: (operator: string) => operator is AFM.RangeConditionOperator;
export declare const isComparisonCondition: (condition: AFM.MeasureValueFilterCondition) => condition is AFM.IComparisonCondition;
export declare const isRangeCondition: (condition: AFM.MeasureValueFilterCondition) => condition is AFM.IRangeCondition;
export declare const getMeasureValueFilterCondition: (operator: string, value: IMeasureValueFilterValue, treatNullValuesAsZero: boolean) => AFM.MeasureValueFilterCondition;
