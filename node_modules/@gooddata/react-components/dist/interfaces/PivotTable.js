"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = require("lodash");
var ColumnEventSourceType;
(function (ColumnEventSourceType) {
    ColumnEventSourceType["AUTOSIZE_COLUMNS"] = "autosizeColumns";
    ColumnEventSourceType["UI_DRAGGED"] = "uiColumnDragged";
    ColumnEventSourceType["FIT_GROW"] = "growToFit";
})(ColumnEventSourceType = exports.ColumnEventSourceType || (exports.ColumnEventSourceType = {}));
var UIClick;
(function (UIClick) {
    UIClick[UIClick["CLICK"] = 1] = "CLICK";
    UIClick[UIClick["DOUBLE_CLICK"] = 2] = "DOUBLE_CLICK";
})(UIClick = exports.UIClick || (exports.UIClick = {}));
function isAbsoluteColumnWidth(columnWidth) {
    return Number(columnWidth.value) === columnWidth.value;
}
exports.isAbsoluteColumnWidth = isAbsoluteColumnWidth;
function isAttributeColumnWidthItem(columnWidthItem) {
    return (!lodash_1.isEmpty(columnWidthItem) &&
        columnWidthItem.attributeColumnWidthItem !== undefined);
}
exports.isAttributeColumnWidthItem = isAttributeColumnWidthItem;
function isMeasureColumnWidthItem(columnWidthItem) {
    return (!lodash_1.isEmpty(columnWidthItem) &&
        columnWidthItem.measureColumnWidthItem !== undefined &&
        columnWidthItem.measureColumnWidthItem.locators !== undefined);
}
exports.isMeasureColumnWidthItem = isMeasureColumnWidthItem;
function isAllMeasureColumnWidthItem(columnWidthItem) {
    return (!lodash_1.isEmpty(columnWidthItem) &&
        columnWidthItem.measureColumnWidthItem !== undefined &&
        columnWidthItem.measureColumnWidthItem.locators === undefined &&
        columnWidthItem.measureColumnWidthItem.locator === undefined);
}
exports.isAllMeasureColumnWidthItem = isAllMeasureColumnWidthItem;
function isWeakMeasureColumnWidthItem(columnWidthItem) {
    return (!lodash_1.isEmpty(columnWidthItem) &&
        columnWidthItem.measureColumnWidthItem !== undefined &&
        columnWidthItem.measureColumnWidthItem.locator !== undefined);
}
exports.isWeakMeasureColumnWidthItem = isWeakMeasureColumnWidthItem;
function isMeasureLocatorItem(locator) {
    return !lodash_1.isEmpty(locator) && locator.measureLocatorItem !== undefined;
}
exports.isMeasureLocatorItem = isMeasureLocatorItem;
//# sourceMappingURL=PivotTable.js.map