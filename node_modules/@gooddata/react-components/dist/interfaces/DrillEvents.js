"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var visualizationTypes_1 = require("../constants/visualizationTypes");
function isDrillableItemUri(item) {
    return item.uri !== undefined;
}
exports.isDrillableItemUri = isDrillableItemUri;
function isDrillableItemIdentifier(item) {
    return item.identifier !== undefined;
}
exports.isDrillableItemIdentifier = isDrillableItemIdentifier;
function isDrillIntersectionAttributeItem(header) {
    return header.attributeHeaderItem !== undefined;
}
exports.isDrillIntersectionAttributeItem = isDrillIntersectionAttributeItem;
function isDrillIntersectionAttribute(header) {
    return header.attributeHeader !== undefined;
}
exports.isDrillIntersectionAttribute = isDrillIntersectionAttribute;
function isMappingMeasureHeaderItem(header) {
    return header.measureHeaderItem !== undefined;
}
exports.isMappingMeasureHeaderItem = isMappingMeasureHeaderItem;
function isDrillEventContextTableExtended(arg) {
    return arg.type === visualizationTypes_1.VisualizationTypes.TABLE;
}
exports.isDrillEventContextTableExtended = isDrillEventContextTableExtended;
function isDrillEventContextHeadlineExtended(arg) {
    return arg.type === visualizationTypes_1.VisualizationTypes.HEADLINE;
}
exports.isDrillEventContextHeadlineExtended = isDrillEventContextHeadlineExtended;
function isDrillEventContextXirrExtended(arg) {
    return arg.type === visualizationTypes_1.VisualizationTypes.XIRR;
}
exports.isDrillEventContextXirrExtended = isDrillEventContextXirrExtended;
function isGroupHighchartsDrillEvent(event) {
    return !!event.points;
}
exports.isGroupHighchartsDrillEvent = isGroupHighchartsDrillEvent;
//# sourceMappingURL=DrillEvents.js.map