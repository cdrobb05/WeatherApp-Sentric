"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2019-2020 GoodData Corporation
var React = require("react");
var react_intl_1 = require("react-intl");
var ColoredItemContent_1 = require("./ColoredItemContent");
var ColorDropdown_1 = require("../colorDropdown/ColorDropdown");
var MappingHeader = require("../../../../../interfaces/MappingHeader");
var ColoredItem = /** @class */ (function (_super) {
    __extends(ColoredItem, _super);
    function ColoredItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onColorSelected = function (color) {
            var _a = _this.props, item = _a.item, onSelect = _a.onSelect;
            if (onSelect) {
                onSelect(item.source, color);
            }
        };
        return _this;
    }
    ColoredItem.prototype.render = function () {
        var coloredItem = this.props.item ? this.props.item.source : null;
        if (!coloredItem) {
            return this.renderLoadingItem();
        }
        var headerItem = coloredItem.mappingHeader;
        var text = this.getText(headerItem);
        return (React.createElement(ColorDropdown_1.default, { selectedColorItem: coloredItem.colorItem, colorPalette: this.props.colorPalette, onColorSelected: this.onColorSelected, showCustomPicker: this.props.showCustomPicker },
            React.createElement(ColoredItemContent_1.default, { text: text, color: coloredItem.color })));
    };
    ColoredItem.prototype.renderLoadingItem = function () {
        return React.createElement("div", { className: "gd-list-item gd-list-item-not-loaded" });
    };
    ColoredItem.prototype.getText = function (headerItem) {
        var text;
        if (MappingHeader.isMappingHeaderMeasureItem(headerItem)) {
            text = headerItem.measureHeaderItem.name;
        }
        else if (MappingHeader.isMappingHeaderAttributeItem(headerItem)) {
            text = headerItem.attributeHeaderItem.name;
        }
        else if (MappingHeader.isMappingHeaderAttribute(headerItem)) {
            text = headerItem.attributeHeader.formOf.name;
        }
        return text;
    };
    ColoredItem.defaultProps = {
        showCustomPicker: false,
        disabled: false,
    };
    return ColoredItem;
}(React.PureComponent));
exports.default = react_intl_1.injectIntl(ColoredItem);
//# sourceMappingURL=ColoredItem.js.map