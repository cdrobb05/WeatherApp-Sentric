import * as React from "react";
import { WrappedComponentProps } from "react-intl";
import { IVisualizationProperties } from "../../interfaces/Visualization";
export interface IConfigSectionProps {
    id: string;
    valuePath?: string;
    canBeToggled?: boolean;
    toggleDisabled?: boolean;
    toggledOn?: boolean;
    propertiesMeta: any;
    properties?: IVisualizationProperties;
    title: string;
    subtitle?: string;
    showDisabledMessage?: boolean;
    className?: string;
    pushData?(data: any): void;
}
export interface IConfigSectionState {
    collapsed: boolean;
}
export declare class ConfigSection extends React.Component<IConfigSectionProps & WrappedComponentProps, IConfigSectionState> {
    static defaultProps: {
        collapsed: boolean;
        canBeToggled: boolean;
        toggleDisabled: boolean;
        toggledOn: boolean;
        disabled: boolean;
        pushData: (...args: any[]) => void;
        showDisabledMessage: boolean;
        className: string;
        properties: {};
    };
    constructor(props: IConfigSectionProps & WrappedComponentProps);
    componentWillReceiveProps(nextProps: IConfigSectionProps & WrappedComponentProps): void;
    render(): JSX.Element;
    private renderToggleSwitch;
    private getHeaderClassNames;
    private getToggleLabelClassNames;
    private getSectionClassNames;
    private toggleCollapsed;
    private toggleValue;
}
declare const _default: React.FunctionComponent<import("react-intl").WithIntlProps<IConfigSectionProps & WrappedComponentProps<"intl">>> & {
    WrappedComponent: React.ComponentType<IConfigSectionProps & WrappedComponentProps<"intl">>;
};
export default _default;
