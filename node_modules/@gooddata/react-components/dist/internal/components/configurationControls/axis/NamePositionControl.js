"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2019-2020 GoodData Corporation
var React = require("react");
var react_intl_1 = require("react-intl");
var get = require("lodash/get");
var DropdownControl_1 = require("../DropdownControl");
var translations_1 = require("../../../utils/translations");
var dropdowns_1 = require("../../../constants/dropdowns");
var NamePositionControl = /** @class */ (function (_super) {
    __extends(NamePositionControl, _super);
    function NamePositionControl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NamePositionControl.prototype.render = function () {
        var _a = this.getControlProperties(), axisVisible = _a.axisVisible, axisNameVisible = _a.axisNameVisible, namePosition = _a.namePosition;
        var _b = this.props, axis = _b.axis, properties = _b.properties, pushData = _b.pushData, disabled = _b.disabled, configPanelDisabled = _b.configPanelDisabled, intl = _b.intl;
        var isDisabled = disabled || !axisVisible || !axisNameVisible;
        var items = translations_1.getTranslatedDropdownItems(this.isXAxis() ? dropdowns_1.xAxisPositionDropdownItems : dropdowns_1.yAxisPositionDropdownItems, intl);
        return (React.createElement(DropdownControl_1.default, { value: namePosition, valuePath: axis + ".name.position", labelText: "properties.axis.name.position", disabled: isDisabled, showDisabledMessage: !configPanelDisabled && isDisabled, properties: properties, pushData: pushData, items: items }));
    };
    NamePositionControl.prototype.isXAxis = function () {
        var axis = this.props.axis;
        return axis === "xaxis" || axis === "secondary_xaxis";
    };
    NamePositionControl.prototype.getControlProperties = function () {
        var axis = this.props.axis;
        var controlsAxis = get(this.props, "properties.controls." + axis, {});
        var axisVisible = get(controlsAxis, "visible", true);
        var axisNameVisible = get(controlsAxis, "name.visible", true);
        var namePosition = get(controlsAxis, "name.position", "auto");
        return {
            axisVisible: axisVisible,
            axisNameVisible: axisNameVisible,
            namePosition: namePosition,
        };
    };
    return NamePositionControl;
}(React.PureComponent));
exports.default = react_intl_1.injectIntl(NamePositionControl);
//# sourceMappingURL=NamePositionControl.js.map