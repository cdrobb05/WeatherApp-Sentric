"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2019-2020 GoodData Corporation
var get = require("lodash/get");
var React = require("react");
var react_intl_1 = require("react-intl");
var ConfigSubsection_1 = require("../../configurationControls/ConfigSubsection");
var NamePositionControl_1 = require("./NamePositionControl");
var NameSubsection = /** @class */ (function (_super) {
    __extends(NameSubsection, _super);
    function NameSubsection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NameSubsection.prototype.render = function () {
        var _a = this.getControlProperties(), axisVisible = _a.axisVisible, axisNameVisible = _a.axisNameVisible;
        var _b = this.props, axis = _b.axis, properties = _b.properties, pushData = _b.pushData, disabled = _b.disabled, configPanelDisabled = _b.configPanelDisabled;
        return (React.createElement(ConfigSubsection_1.default, { title: "properties.axis.name", valuePath: axis + ".name.visible", properties: properties, pushData: pushData, canBeToggled: true, toggledOn: axisNameVisible, toggleDisabled: disabled || !axisVisible, showDisabledMessage: !configPanelDisabled && disabled },
            React.createElement(NamePositionControl_1.default, { disabled: disabled, configPanelDisabled: configPanelDisabled, axis: axis, properties: properties, pushData: pushData })));
    };
    NameSubsection.prototype.getControlProperties = function () {
        var controlsAxis = get(this.props, "properties.controls." + this.props.axis, {});
        var axisVisible = get(controlsAxis, "visible", true);
        var axisNameVisible = get(controlsAxis, "name.visible", true);
        return {
            axisVisible: axisVisible,
            axisNameVisible: axisNameVisible,
        };
    };
    return NameSubsection;
}(React.PureComponent));
exports.default = react_intl_1.injectIntl(NameSubsection);
//# sourceMappingURL=NameSubsection.js.map