"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2019-2020 GoodData Corporation
var React = require("react");
var react_dom_1 = require("react-dom");
var PluggablePieChart_1 = require("../pieChart/PluggablePieChart");
var funnelChartUiConfigHelper_1 = require("../../../utils/uiConfigHelpers/funnelChartUiConfigHelper");
var UnsupportedConfigurationPanel_1 = require("../../configurationPanels/UnsupportedConfigurationPanel");
var visualizationTypes_1 = require("../../../../constants/visualizationTypes");
var PluggableFunnelChart = /** @class */ (function (_super) {
    __extends(PluggableFunnelChart, _super);
    function PluggableFunnelChart(props) {
        var _this = _super.call(this, props) || this;
        _this.type = visualizationTypes_1.VisualizationTypes.FUNNEL;
        return _this;
    }
    PluggableFunnelChart.prototype.getExtendedReferencePoint = function (referencePoint) {
        return _super.prototype.getExtendedReferencePoint.call(this, referencePoint).then(funnelChartUiConfigHelper_1.setFunnelChartUiConfig);
    };
    PluggableFunnelChart.prototype.renderConfigurationPanel = function () {
        if (document.querySelector(this.configPanelElement)) {
            var properties = this.visualizationProperties || {};
            react_dom_1.render(React.createElement(UnsupportedConfigurationPanel_1.default, { locale: this.locale, pushData: this.callbacks.pushData, properties: properties }), document.querySelector(this.configPanelElement));
        }
    };
    return PluggableFunnelChart;
}(PluggablePieChart_1.PluggablePieChart));
exports.PluggableFunnelChart = PluggableFunnelChart;
//# sourceMappingURL=PluggableFunnelChart.js.map