import { PluggableBaseChart } from "../baseChart/PluggableBaseChart";
import { IReferencePoint, IExtendedReferencePoint, IVisConstruct, IUiConfig, IVisProps, IVisualizationPropertiesWrapper, IReferences } from "../../../interfaces/Visualization";
import { VisualizationObject } from "@gooddata/typings";
export declare class PluggableAreaChart extends PluggableBaseChart {
    constructor(props: IVisConstruct);
    getUiConfig(): IUiConfig;
    update(options: IVisProps, visualizationProperties: IVisualizationPropertiesWrapper, mdObject: VisualizationObject.IVisualizationObjectContent, references: IReferences): void;
    getExtendedReferencePoint(referencePoint: IReferencePoint): Promise<IExtendedReferencePoint>;
    protected configureBuckets(extendedReferencePoint: IExtendedReferencePoint): void;
    protected getSupportedPropertiesList(): string[];
    protected renderConfigurationPanel(): void;
    private updateCustomSupportedProperties;
    private addSupportedProperties;
    private getAllAttributes;
    private getAllAttributesWithoutDate;
    private filterStackItems;
    private getBucketItems;
}
