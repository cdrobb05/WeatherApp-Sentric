import { VisualizationObject } from "@gooddata/typings";
import { IReferencePoint, IExtendedReferencePoint, IVisConstruct, IVisProps, IUiConfig, IGdcConfig, IVisualizationProperties, IVisualizationPropertiesControls } from "../../../interfaces/Visualization";
import { PluggableBaseChart } from "../baseChart/PluggableBaseChart";
import { IChartConfig } from "../../../..";
export declare class PluggableGeoPushpinChart extends PluggableBaseChart {
    private geoPushpinElement;
    constructor(props: IVisConstruct);
    getExtendedReferencePoint(referencePoint: IReferencePoint): Promise<IExtendedReferencePoint>;
    getUiConfig(): IUiConfig;
    protected getSupportedPropertiesList(): string[];
    protected configureBuckets(extendedReferencePoint: IExtendedReferencePoint): IExtendedReferencePoint;
    protected renderConfigurationPanel(): void;
    protected buildVisualizationConfig(mdObject: VisualizationObject.IVisualizationObjectContent, config: IGdcConfig, supportedControls: IVisualizationPropertiesControls): IChartConfig;
    protected renderVisualization(options: IVisProps, visualizationProperties: IVisualizationProperties, mdObject: VisualizationObject.IVisualizationObjectContent): void;
    private sanitizeMeasures;
    private getResultSpec;
    private getSegmentItems;
    private getLocationItems;
    private getPreferedBucketItemLimit;
    private updateSupportedProperties;
}
