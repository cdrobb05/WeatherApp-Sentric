import { VisualizationObject } from "@gooddata/typings";
import { AbstractPluggableVisualization } from "../AbstractPluggableVisualization";
import { ILocale, IVisCallbacks, IVisualizationPropertiesWrapper, IVisProps, IFeatureFlags, IVisConstruct } from "../../../interfaces/Visualization";
import { IntlShape } from "react-intl";
export declare abstract class PluggableBaseHeadline extends AbstractPluggableVisualization {
    protected projectId: string;
    protected configPanelElement: string;
    protected element: string;
    protected locale: ILocale;
    protected intl: IntlShape;
    protected callbacks: IVisCallbacks;
    protected featureFlags?: IFeatureFlags;
    constructor(props: IVisConstruct);
    update(options: IVisProps, visualizationProperties: IVisualizationPropertiesWrapper, mdObject: VisualizationObject.IVisualizationObjectContent): void;
    unmount(): void;
    protected abstract renderVisualization(options: IVisProps, mdObject: VisualizationObject.IVisualizationObjectContent): void;
    protected renderConfigurationPanel(visualizationProperties: IVisualizationPropertiesWrapper): void;
}
