import { AFM, VisualizationObject } from "@gooddata/typings";
import { IBucketItem, IBucketFilter } from "../../../interfaces/Visualization";
export declare function adaptReferencePointSortItemsToPivotTable(originalSortItems: AFM.SortItem[], measures: IBucketItem[], rowAttributes: IBucketItem[], columnAttributes: IBucketItem[]): AFM.SortItem[];
export declare const getMeasures: (buckets: VisualizationObject.IBucket[]) => VisualizationObject.IMeasure[];
export declare const getRows: (buckets: VisualizationObject.IBucket[]) => VisualizationObject.IVisualizationAttribute[];
export declare const getColumns: (buckets: VisualizationObject.IBucket[]) => VisualizationObject.IVisualizationAttribute[];
export declare function adaptMdObjectSortItemsToPivotTable(originalSortItems: AFM.SortItem[], buckets: VisualizationObject.IBucket[]): AFM.SortItem[];
export declare const isSortItemVisible: (sortItem: AFM.SortItem, filters: IBucketFilter[]) => boolean;
export declare function addDefaultSort(sortItems: AFM.SortItem[], filters: IBucketFilter[], rowAttributes: IBucketItem[], previousRowAttributes?: IBucketItem[]): AFM.SortItem[];
