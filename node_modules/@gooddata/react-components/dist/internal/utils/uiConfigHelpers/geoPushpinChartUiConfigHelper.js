"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var cloneDeep = require("lodash/cloneDeep");
var set = require("lodash/set");
var get = require("lodash/get");
var uiConfig_1 = require("../../constants/uiConfig");
var bucket_1 = require("../../constants/bucket");
var bucketHelper_1 = require("../bucketHelper");
var BucketNames = require("../../../constants/bucketNames");
var geoPushPinBucketLocationIcon = require("../../assets/geoPushpin/bucket-title-location-icon.svg");
var geoPushPinBucketSizeIcon = require("../../assets/geoPushpin/bucket-title-size-icon.svg");
var geoPushPinBucketColorIcon = require("../../assets/geoPushpin/bucket-title-color-icon.svg");
var geoPushPinBucketSegmentIcon = require("../../assets/geoPushpin/bucket-title-segment-icon.svg");
function setGeoPushpinUiConfig(referencePoint, intl, visualizationType) {
    var _a;
    var referencePointConfigured = cloneDeep(referencePoint);
    set(referencePointConfigured, uiConfig_1.UICONFIG, bucketHelper_1.setBucketTitles(referencePoint, visualizationType, intl));
    set(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.LOCATION, "icon"], geoPushPinBucketLocationIcon);
    set(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.SIZE, "icon"], geoPushPinBucketSizeIcon);
    set(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.COLOR, "icon"], geoPushPinBucketColorIcon);
    set(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.SEGMENT, "icon"], geoPushPinBucketSegmentIcon);
    // overide base config
    set(referencePointConfigured, [uiConfig_1.UICONFIG, uiConfig_1.OPEN_AS_REPORT, uiConfig_1.SUPPORTED], false);
    // only apply related bucket uiConfig
    set(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS], (_a = {},
        _a[BucketNames.LOCATION] = get(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.LOCATION]),
        _a[BucketNames.SIZE] = get(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.SIZE]),
        _a[BucketNames.COLOR] = get(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.COLOR]),
        _a[BucketNames.SEGMENT] = get(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.SEGMENT]),
        _a[BucketNames.FILTERS] = get(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.FILTERS]),
        _a));
    return referencePointConfigured;
}
exports.setGeoPushpinUiConfig = setGeoPushpinUiConfig;
//# sourceMappingURL=geoPushpinChartUiConfigHelper.js.map