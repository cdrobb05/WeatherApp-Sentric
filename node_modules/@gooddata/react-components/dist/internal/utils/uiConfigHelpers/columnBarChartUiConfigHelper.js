"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2019 GoodData Corporation
var cloneDeep = require("lodash/cloneDeep");
var set = require("lodash/set");
var get = require("lodash/get");
var BucketNames = require("../../../constants/bucketNames");
var translations_1 = require("../translations");
var uiConfig_1 = require("../../constants/uiConfig");
var bucket_1 = require("../../constants/bucket");
var bucketHelper_1 = require("../bucketHelper");
var OverTimeComparison_1 = require("../../../interfaces/OverTimeComparison");
function setColumnBarChartUiConfig(referencePoint, intl) {
    var referencePointConfigured = cloneDeep(referencePoint);
    set(referencePointConfigured, [uiConfig_1.UICONFIG, uiConfig_1.SUPPORTED_COMPARISON_TYPES], [OverTimeComparison_1.OverTimeComparisonTypes.SAME_PERIOD_PREVIOUS_YEAR, OverTimeComparison_1.OverTimeComparisonTypes.PREVIOUS_PERIOD]);
    var buckets = get(referencePointConfigured, bucket_1.BUCKETS, []);
    var measures = bucketHelper_1.getMeasureItems(buckets);
    if (measures.length > 1) {
        var warningMessage = translations_1.getTranslation("dashboard.bucket.measure_stack_by_warning", intl);
        set(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.STACK, "canAddItems"], false);
        set(referencePointConfigured, [uiConfig_1.UICONFIG, bucket_1.BUCKETS, BucketNames.STACK, "warningMessage"], warningMessage);
    }
    return referencePointConfigured;
}
exports.setColumnBarChartUiConfig = setColumnBarChartUiConfig;
//# sourceMappingURL=columnBarChartUiConfigHelper.js.map