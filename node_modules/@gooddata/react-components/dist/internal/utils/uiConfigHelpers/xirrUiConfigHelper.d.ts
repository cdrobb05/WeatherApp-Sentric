/// <reference types="react" />
import { IntlShape } from "react-intl";
import { IReferencePoint, IUiConfig, ICustomError } from "../../interfaces/Visualization";
export declare const getDefaultXirrUiConfig: () => IUiConfig;
export declare const getCustomError: ({ buckets }: Readonly<IReferencePoint>, formatMessage: {
    (descriptor: import("react-intl").MessageDescriptor, values?: Record<string, import("intl-messageformat").PrimitiveType>): string;
    (descriptor: import("react-intl").MessageDescriptor, values?: Record<string, string | number | boolean | Date | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)>) | (new (props: any) => import("react").Component<any, any, any>)> | import("intl-messageformat").FormatXMLElementFn>): string | import("react").ReactNodeArray;
}) => ICustomError;
export declare const getXirrUiConfig: (referencePoint: IReferencePoint, intl: IntlShape) => IUiConfig;
