"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2019-2020 GoodData Corporation
var cloneDeep = require("lodash/cloneDeep");
var get = require("lodash/get");
var BucketNames = require("../../../constants/bucketNames");
var uiConfig_1 = require("../../constants/uiConfig");
var bucket_1 = require("../../constants/bucket");
var bucketHelper_1 = require("./../bucketHelper");
var translations_1 = require("../translations");
var bulletPrimaryMeasureIcon = require("../../assets/bullet/bucket-title-primary.svg");
var bulletTargetMeasureIcon = require("../../assets/bullet/bucket-title-target.svg");
var bulletComparativeMeasureIcon = require("../../assets/bullet/bucket-title-comparative.svg");
var bulletViewByIcon = require("../../assets/bullet/bucket-title-view-by.svg");
function getBulletChartUiConfig(referencePoint, intl, visualizationType) {
    var referencePointConfigured = cloneDeep(referencePoint);
    referencePointConfigured[uiConfig_1.UICONFIG] = bucketHelper_1.setBucketTitles(referencePointConfigured, visualizationType, intl);
    var buckets = get(referencePoint, bucket_1.BUCKETS, []);
    var primaryMeasuresCount = bucketHelper_1.getItemsCount(buckets, BucketNames.MEASURES);
    var secondaryMeasuresCount = bucketHelper_1.getItemsCount(buckets, BucketNames.SECONDARY_MEASURES);
    var tertiaryMeasuresCount = bucketHelper_1.getItemsCount(buckets, BucketNames.TERTIARY_MEASURES);
    referencePointConfigured[uiConfig_1.UICONFIG].buckets[BucketNames.MEASURES] = __assign({}, referencePointConfigured[uiConfig_1.UICONFIG].buckets[BucketNames.MEASURES], { canAddItems: primaryMeasuresCount < 1, icon: bulletPrimaryMeasureIcon });
    referencePointConfigured[uiConfig_1.UICONFIG].buckets[BucketNames.SECONDARY_MEASURES] = __assign({}, referencePointConfigured[uiConfig_1.UICONFIG].buckets[BucketNames.SECONDARY_MEASURES], { canAddItems: secondaryMeasuresCount < 1, icon: bulletTargetMeasureIcon });
    referencePointConfigured[uiConfig_1.UICONFIG].buckets[BucketNames.TERTIARY_MEASURES] = __assign({}, referencePointConfigured[uiConfig_1.UICONFIG].buckets[BucketNames.TERTIARY_MEASURES], { canAddItems: tertiaryMeasuresCount < 1, icon: bulletComparativeMeasureIcon });
    referencePointConfigured[uiConfig_1.UICONFIG].buckets[BucketNames.VIEW] = __assign({}, referencePointConfigured[uiConfig_1.UICONFIG].buckets[BucketNames.VIEW], { icon: bulletViewByIcon });
    if (primaryMeasuresCount === 0 && (secondaryMeasuresCount !== 0 || tertiaryMeasuresCount !== 0)) {
        referencePointConfigured[uiConfig_1.UICONFIG].customError = {
            heading: translations_1.getTranslation("dashboard.error.missing_primary_bucket_item.heading", intl),
            text: translations_1.getTranslation("dashboard.error.missing_primary_bucket_item.text", intl),
        };
    }
    return referencePointConfigured;
}
exports.getBulletChartUiConfig = getBulletChartUiConfig;
//# sourceMappingURL=bulletChartUiConfigHelper.js.map