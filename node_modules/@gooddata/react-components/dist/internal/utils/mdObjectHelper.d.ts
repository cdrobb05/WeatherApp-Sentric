import { VisualizationObject } from "@gooddata/typings";
import { IVisualizationPropertiesControls } from "../interfaces/Visualization";
export declare function hasAttribute(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function haveManyViewItems(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function hasOneViewItem(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function hasTertiaryMeasures(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function isStacked(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function hasMeasures(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function hasColorMeasure(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function hasSizeMeasure(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function hasLocationAttribute(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function hasSegmentAttribute(mdObject: VisualizationObject.IVisualizationObjectContent): boolean;
export declare function canSortStackTotalValue(mdObject: VisualizationObject.IVisualizationObjectContent, supportedControls: IVisualizationPropertiesControls, enableSortingByTotalGroup?: boolean): boolean;
export declare function countItemsInMdObject(mdObject: VisualizationObject.IVisualizationObjectContent): {
    viewByItemCount?: undefined;
    measureItemCount?: undefined;
    secondaryMeasureItemCount?: undefined;
} | {
    viewByItemCount: number;
    measureItemCount: number;
    secondaryMeasureItemCount: number;
};
export declare function countItemsOnAxes(type: string, controls: IVisualizationPropertiesControls, mdObject: VisualizationObject.IVisualizationObjectContent): {
    yaxis: number;
    xaxis: number;
    secondary_xaxis: any;
    secondary_yaxis?: undefined;
} | {
    xaxis: number;
    yaxis: number;
    secondary_xaxis?: undefined;
    secondary_yaxis?: undefined;
} | {
    xaxis: number;
    yaxis: number;
    secondary_yaxis: any;
    secondary_xaxis?: undefined;
};
export declare function isDisplayFormUri(displayForm: VisualizationObject.IObjUriQualifier | VisualizationObject.IObjIdentifierQualifier): displayForm is VisualizationObject.IObjUriQualifier;
