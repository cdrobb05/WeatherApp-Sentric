import * as React from "react";
import { WrappedComponentProps } from "react-intl";
import * as numberJS from "@gooddata/numberjs";
import { IFormatPreset } from "../typings";
import { IPositioning } from "../../../typings/positioning";
interface IMeasureNumberFormatDropdownOwnProps {
    presets: ReadonlyArray<IFormatPreset>;
    customPreset: IFormatPreset;
    selectedPreset: IFormatPreset;
    separators: numberJS.ISeparators;
    onSelect: (selectedPreset: IFormatPreset) => void;
    onClose: () => void;
    anchorEl?: string | EventTarget;
    positioning?: IPositioning[];
}
declare type IMeasureNumberFormatDropdownProps = IMeasureNumberFormatDropdownOwnProps & WrappedComponentProps;
export declare class PresetsDropdown extends React.PureComponent<IMeasureNumberFormatDropdownProps> {
    static defaultProps: Partial<IMeasureNumberFormatDropdownProps>;
    render(): JSX.Element;
    private renderPresetOption;
    private renderCustomFormatItem;
}
declare const _default: React.FunctionComponent<import("react-intl").WithIntlProps<IMeasureNumberFormatDropdownProps>> & {
    WrappedComponent: React.ComponentType<IMeasureNumberFormatDropdownProps>;
};
export default _default;
