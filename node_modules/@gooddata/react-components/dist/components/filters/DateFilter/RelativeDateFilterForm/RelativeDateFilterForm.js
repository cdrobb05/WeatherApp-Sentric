"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2019 GoodData Corporation
var React = require("react");
var GranularityTabs_1 = require("./GranularityTabs");
var RelativeRangePicker_1 = require("../RelativeRangePicker/RelativeRangePicker");
exports.RelativeDateFilterForm = function (_a) {
    var selectedFilterOption = _a.selectedFilterOption, availableGranularities = _a.availableGranularities, onSelectedFilterOptionChange = _a.onSelectedFilterOptionChange, isMobile = _a.isMobile;
    return (React.createElement(React.Fragment, null,
        React.createElement(GranularityTabs_1.GranularityTabs, { availableGranularities: availableGranularities, selectedGranularity: selectedFilterOption.granularity, 
            // tslint:disable-next-line: jsx-no-lambda
            onSelectedGranularityChange: function (granularity) {
                return onSelectedFilterOptionChange(__assign({}, selectedFilterOption, (selectedFilterOption.granularity !== granularity && {
                    from: undefined,
                    to: undefined,
                }), { granularity: granularity }));
            } }),
        React.createElement(RelativeRangePicker_1.RelativeRangePicker, { selectedFilterOption: selectedFilterOption, onSelectedFilterOptionChange: onSelectedFilterOptionChange, 
            // Do not reuse components across different tabs, caused problems with focus/blur handling.
            key: selectedFilterOption.granularity, isMobile: isMobile })));
};
//# sourceMappingURL=RelativeDateFilterForm.js.map