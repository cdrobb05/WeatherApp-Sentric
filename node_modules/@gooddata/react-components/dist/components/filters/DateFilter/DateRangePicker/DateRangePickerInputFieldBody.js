"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2019 GoodData Corporation
var React = require("react");
var classnames_1 = require("classnames");
// This has to be a class because DayPickerInput refs to it internally.
// See https://github.com/gpbl/react-day-picker/issues/748 for more information
var DateRangePickerInputFieldBody = /** @class */ (function (_super) {
    __extends(DateRangePickerInputFieldBody, _super);
    function DateRangePickerInputFieldBody() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.inputRef = React.createRef();
        _this.invokeInputMethod = function (key) {
            if (_this.inputRef.current) {
                _this.inputRef.current[key]();
            }
        };
        _this.blur = function () { return _this.invokeInputMethod("blur"); };
        _this.focus = function () { return _this.invokeInputMethod("focus"); };
        return _this;
    }
    Object.defineProperty(DateRangePickerInputFieldBody.prototype, "value", {
        get: function () {
            if (this.inputRef.current) {
                return this.inputRef.current.value;
            }
            return "";
        },
        enumerable: true,
        configurable: true
    });
    DateRangePickerInputFieldBody.prototype.render = function () {
        var className = this.props.className;
        return (React.createElement("div", { className: classnames_1.default("gd-date-range-picker-input-wrapper", className) },
            React.createElement("span", { className: "gd-date-range-picker-input-icon icon-calendar" }),
            React.createElement("input", __assign({}, this.props, { ref: this.inputRef, className: "gd-date-range-picker-input-field input-text s-date-range-picker-input-field" }))));
    };
    return DateRangePickerInputFieldBody;
}(React.Component));
exports.DateRangePickerInputFieldBody = DateRangePickerInputFieldBody;
//# sourceMappingURL=DateRangePickerInputFieldBody.js.map