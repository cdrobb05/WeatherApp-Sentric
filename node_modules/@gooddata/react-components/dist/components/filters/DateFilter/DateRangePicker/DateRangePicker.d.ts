import * as React from "react";
import { DayPickerProps } from "react-day-picker";
import { WrappedComponentProps } from "react-intl";
import { IExtendedDateFilterErrors } from "../../../../interfaces/ExtendedDateFilters";
export interface IDateRange {
    from: Date;
    to: Date;
}
interface IDateRangePickerProps {
    range: IDateRange;
    onRangeChange: (newRange: IDateRange) => void;
    errors?: IExtendedDateFilterErrors["absoluteForm"];
    dateFormat?: string | string[];
    dayPickerProps?: DayPickerProps;
    isMobile: boolean;
}
export declare class DateRangePickerComponent extends React.Component<IDateRangePickerProps & WrappedComponentProps> {
    private fromInputRef;
    private toInputRef;
    render(): React.ReactNode;
    private focusField;
    private blurField;
    private updateRange;
    private handleFromDayClick;
    private handleToDayClick;
    private getSanitizedInputValue;
    private handleFromChange;
    private handleToChange;
}
export declare const DateRangePicker: React.FunctionComponent<import("react-intl").WithIntlProps<IDateRangePickerProps & WrappedComponentProps<"intl">>> & {
    WrappedComponent: React.ComponentType<IDateRangePickerProps & WrappedComponentProps<"intl">>;
};
export {};
