"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2019 GoodData Corporation
var React = require("react");
var conversions_1 = require("./conversions");
var DateRangePicker_1 = require("../DateRangePicker/DateRangePicker");
var dayPickerProps = {
    firstDayOfWeek: 0,
};
var AbsoluteDateFilterForm = /** @class */ (function (_super) {
    __extends(AbsoluteDateFilterForm, _super);
    function AbsoluteDateFilterForm() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleRangeChange = function (range) {
            _this.props.onSelectedFilterOptionChange(conversions_1.dateRangeToDateFilterValue(range, _this.props.selectedFilterOption.localIdentifier));
        };
        return _this;
    }
    AbsoluteDateFilterForm.prototype.render = function () {
        var _a = this.props, isMobile = _a.isMobile, selectedFilterOption = _a.selectedFilterOption, errors = _a.errors;
        return (React.createElement(DateRangePicker_1.DateRangePicker, { onRangeChange: this.handleRangeChange, range: conversions_1.dateFilterValueToDateRange(selectedFilterOption), errors: errors, isMobile: isMobile, dayPickerProps: dayPickerProps }));
    };
    return AbsoluteDateFilterForm;
}(React.Component));
exports.AbsoluteDateFilterForm = AbsoluteDateFilterForm;
//# sourceMappingURL=AbsoluteDateFilterForm.js.map