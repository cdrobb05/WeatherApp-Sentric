import * as React from "react";
import { WrappedComponentProps } from "react-intl";
import { ISeparators } from "./separators";
import { IMeasureValueFilterValue } from "../../../interfaces/MeasureValueFilter";
interface IDropdownOwnProps {
    onApply: (operator: string, value: IMeasureValueFilterValue, treatNullValuesAsZero: boolean) => void;
    onCancel: () => void;
    operator?: string;
    value?: IMeasureValueFilterValue;
    usePercentage?: boolean;
    warningMessage?: string;
    locale?: string;
    anchorEl: EventTarget | string;
    separators?: ISeparators;
    displayTreatNullAsZeroOption?: boolean;
    treatNullAsZeroValue?: boolean;
}
declare type IDropdownProps = IDropdownOwnProps & WrappedComponentProps;
interface IDropdownState {
    displayDropdown: boolean;
}
export declare const DropdownWithIntl: React.FunctionComponent<import("react-intl").WithIntlProps<IDropdownProps>> & {
    WrappedComponent: React.ComponentType<IDropdownProps>;
};
export declare class Dropdown extends React.PureComponent<IDropdownOwnProps, IDropdownState> {
    render(): JSX.Element;
}
export {};
