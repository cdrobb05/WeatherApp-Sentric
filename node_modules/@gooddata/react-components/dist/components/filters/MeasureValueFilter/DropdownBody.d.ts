import * as React from "react";
import { WrappedComponentProps } from "react-intl";
import { ISeparators } from "./separators";
import { IMeasureValueFilterValue } from "../../../interfaces/MeasureValueFilter";
interface IDropdownBodyOwnProps {
    operator?: string;
    value?: IMeasureValueFilterValue;
    usePercentage?: boolean;
    warningMessage?: string;
    locale?: string;
    disableAutofocus?: boolean;
    onCancel?: () => void;
    onApply: (operator: string, value: IMeasureValueFilterValue, treatNullValuesAsZero: boolean) => void;
    separators?: ISeparators;
    displayTreatNullAsZeroOption?: boolean;
    treatNullAsZeroValue?: boolean;
}
declare type IDropdownBodyProps = IDropdownBodyOwnProps & WrappedComponentProps;
export declare const DropdownBodyWithIntl: React.FunctionComponent<import("react-intl").WithIntlProps<IDropdownBodyProps>> & {
    WrappedComponent: React.ComponentType<IDropdownBodyProps>;
};
export declare class DropdownBody extends React.PureComponent<IDropdownBodyOwnProps> {
    render(): JSX.Element;
}
export {};
