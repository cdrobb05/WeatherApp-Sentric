import { AFM, Execution } from "@gooddata/typings";
import { IntlShape } from "react-intl";
import { IHeaderPredicate } from "../../../../interfaces/HeaderPredicate";
import { IDrillEventExtended } from "../../../../interfaces/DrillEvents";
import { IHeadlineData } from "../../../../interfaces/Headlines";
import { IHeadlineDrillItemContext } from "../types";
export interface IHeadlineExecutionData {
    measureHeaderItem: Execution.IMeasureHeaderItem["measureHeaderItem"];
    value: Execution.DataValue;
}
/**
 * Get {HeadlineData} used by the {Headline} component.
 *
 * @param executionResponse - The execution response with dimensions definition.
 * @param executionResult - The execution result with an actual data values.
 * @param intl - Required localization for compare item title
 * @returns {*}
 */
export declare function getHeadlineData(executionResponse: Execution.IExecutionResponse, executionResult: Execution.IExecutionResult, intl: IntlShape): IHeadlineData;
/**
 * Take headline data and apply list of drillable items.
 * The method will return copied collection of the headline data with altered drillable status.
 *
 * @param headlineData - The headline data that we want to change the drillable status.
 * @param drillableItems - list of drillable items {uri, identifier}
 * @param executionRequest - Request with required measure id (uri or identifier) for activation of drill eventing
 * @param executionResponse - Response headers for drilling predicate matching
 * @returns altered headlineData
 */
export declare function applyDrillableItems(headlineData: IHeadlineData, drillableItems: IHeaderPredicate[], executionRequest: AFM.IExecution["execution"], executionResponse: Execution.IExecutionResponse): IHeadlineData;
/**
 * Build drill event data (object with execution and drill context) from the data obtained by clicking on the {Headline}
 * component an from the execution objects.
 *
 * @param itemContext - data received from the click on the {Headline} component.
 * @param executionRequest - The execution request with AFM and ResultSpec.
 * @param executionResponse - The execution response with dimensions definition.
 * @returns {*}
 */
export declare function buildDrillEventData(itemContext: IHeadlineDrillItemContext, executionRequest: AFM.IExecution["execution"], executionResponse: Execution.IExecutionResponse): IDrillEventExtended;
