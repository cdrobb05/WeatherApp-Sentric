import { AFM, Execution, VisualizationObject } from "@gooddata/typings";
import { IColorPalette, IColorMapping, IColorAssignment } from "../../../interfaces/Config";
export interface IColorStrategy {
    getColorByIndex(index: number): string;
    getColorAssignment(): IColorAssignment[];
    getFullColorAssignment(): IColorAssignment[];
}
export interface ICreateColorAssignmentReturnValue {
    fullColorAssignment: IColorAssignment[];
    outputColorAssignment?: IColorAssignment[];
}
export declare type HighChartColorPalette = string[];
export declare const attributeChartSupportedTypes: ("bubble" | "funnel" | "pie" | "scatter" | "donut")[];
export declare function isAttributeColorPalette(type: string, afm: AFM.IAfm, stackByAttribute: any): any;
export declare class ColorFactory {
    static getColorStrategy(colorPalette: IColorPalette, colorMapping: IColorMapping[], viewByAttribute: any, stackByAttribute: any, executionResponse: Execution.IExecutionResponse, afm: AFM.IAfm, type: string, occupiedMeasureBucketsLocalIdentifiers?: VisualizationObject.Identifier[]): IColorStrategy;
}
