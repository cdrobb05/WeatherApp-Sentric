"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var gooddata_js_1 = require("@gooddata/gooddata-js");
var color_1 = require("../utils/color");
var ColorStrategy = /** @class */ (function () {
    function ColorStrategy(colorPalette, colorMapping, viewByAttribute, stackByAttribute, executionResponse, afm, occupiedMeasureBucketsLocalIdentifiers) {
        var _a = this.createColorAssignment(colorPalette, colorMapping, viewByAttribute, stackByAttribute, executionResponse, afm, occupiedMeasureBucketsLocalIdentifiers), fullColorAssignment = _a.fullColorAssignment, outputColorAssignment = _a.outputColorAssignment;
        this.fullColorAssignment = fullColorAssignment;
        this.outputColorAssignment = outputColorAssignment ? outputColorAssignment : fullColorAssignment;
        this.palette = this.createPalette(colorPalette, this.fullColorAssignment, viewByAttribute, stackByAttribute);
    }
    ColorStrategy.prototype.getColorByIndex = function (index) {
        return this.palette[index];
    };
    ColorStrategy.prototype.getColorAssignment = function () {
        return this.outputColorAssignment;
    };
    ColorStrategy.prototype.getFullColorAssignment = function () {
        return this.fullColorAssignment;
    };
    ColorStrategy.prototype.createPalette = function (colorPalette, colorAssignment, _viewByAttribute, _stackByAttribute) {
        return colorAssignment.map(function (map, index) {
            var color = gooddata_js_1.TypeGuards.isGuidColorItem(map.color)
                ? color_1.getColorByGuid(colorPalette, map.color.value, index)
                : map.color.value;
            return color_1.getRgbStringFromRGB(color);
        });
    };
    return ColorStrategy;
}());
exports.default = ColorStrategy;
//# sourceMappingURL=colorStrategy.js.map