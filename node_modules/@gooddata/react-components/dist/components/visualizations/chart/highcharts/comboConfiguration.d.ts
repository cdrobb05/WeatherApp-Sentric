import { VisualizationObject } from "@gooddata/typings";
import { IChartConfig } from "../../../../interfaces/Config";
export declare function getDefaultChartType(config?: IChartConfig): VisualizationObject.VisualizationType;
export declare function getComboConfiguration(config?: IChartConfig): {
    chart: {
        type: VisualizationObject.VisualizationType;
        spacingTop: number;
    };
    plotOptions: {
        series: {
            states: {
                inactive: {
                    opacity: number;
                };
            };
        };
        column: {
            dataLabels: {
                enabled: boolean;
                crop: boolean;
                overflow: string;
                padding: number;
            };
            maxPointWidth: number;
            borderColor: string;
        };
        line: {
            marker: {
                symbol: string;
                radius: number;
            };
            lineWidth: number;
            fillOpacity: number;
            stickyTracking: boolean;
            states: {
                hover: {
                    lineWidth: number;
                };
            };
            dataLabels: {
                style: {
                    fontWeight: string;
                };
            };
        };
        area: {
            marker: {
                symbol: string;
                radius: number;
            };
            lineWidth: number;
            fillOpacity: number;
            stickyTracking: boolean;
            states: {
                hover: {
                    lineWidth: number;
                };
            };
        };
    } | {
        series?: undefined;
        column: {
            dataLabels: {
                enabled: boolean;
                crop: boolean;
                overflow: string;
                padding: number;
            };
            maxPointWidth: number;
            borderColor: string;
        };
        line: {
            marker: {
                symbol: string;
                radius: number;
            };
            lineWidth: number;
            fillOpacity: number;
            stickyTracking: boolean;
            states: {
                hover: {
                    lineWidth: number;
                };
            };
            dataLabels: {
                style: {
                    fontWeight: string;
                };
            };
        };
        area: {
            marker: {
                symbol: string;
                radius: number;
            };
            lineWidth: number;
            fillOpacity: number;
            stickyTracking: boolean;
            states: {
                hover: {
                    lineWidth: number;
                };
            };
        };
    };
};
