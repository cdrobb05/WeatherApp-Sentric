"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2019 GoodData Corporation
var autohideLabels_1 = require("./plugins/autohideLabels/autohideLabels");
var dataLabelsColors_1 = require("./plugins/dataLabelsColors");
var pointHalo_1 = require("./plugins/pointHalo");
var linearTickPositions_1 = require("./plugins/linearTickPositions");
var group_categories_wrapper_1 = require("./plugins/group-categories-wrapper");
var renderBubbles_1 = require("./plugins/renderBubbles");
var adjustTickAmount_1 = require("./plugins/adjustTickAmount");
var extendRenderStackTotals = function (Highcharts) {
    Highcharts.wrap(Highcharts.Axis.prototype, "renderStackTotals", function (proceed) {
        var axis = this;
        var chart = axis.chart, stackTotalGroup = axis.stackTotalGroup;
        var renderer = chart.renderer;
        /* We override renderStackTotals method to render "stack-labels" directly with desired
         * visibility to prevent blinking of data labels while resizing. In Highcharts it's
         * by default:
         *     visibility: VISIBLE,
         */
        var defaultVisibility = chart.userOptions.stackLabelsVisibility || "visible";
        if (!stackTotalGroup) {
            axis.stackTotalGroup = renderer
                .g("stack-labels")
                .attr({
                visibility: defaultVisibility,
                zIndex: 6,
            })
                .add();
        }
        proceed.call(this);
    });
};
function initChartPlugins(Highcharts) {
    extendRenderStackTotals(Highcharts);
    autohideLabels_1.default(Highcharts);
    dataLabelsColors_1.extendDataLabelColors(Highcharts);
    pointHalo_1.applyPointHaloOptions(Highcharts);
    linearTickPositions_1.linearTickPositions(Highcharts);
    group_categories_wrapper_1.groupCategoriesWrapper(Highcharts);
    adjustTickAmount_1.adjustTickAmount(Highcharts);
    // modify rendering bubbles in bubble chart after upgrade to Highcharts v7.1.1
    renderBubbles_1.renderBubbles(Highcharts);
}
exports.initChartPlugins = initChartPlugins;
//# sourceMappingURL=chartPlugins.js.map