import { IColorItem } from "@gooddata/gooddata-js";
import { AFM, Execution, VisualizationObject } from "@gooddata/typings";
import { IColorPalette } from "../../../..";
import { IColorAssignment, IColorMapping } from "../../../../interfaces/Config";
import { ICreateColorAssignmentReturnValue } from "../colorFactory";
import ColorStrategy from "../colorStrategy";
declare class BulletChartColorStrategy extends ColorStrategy {
    protected createColorAssignment(colorPalette: IColorPalette, colorMapping: IColorMapping[], _viewByAttribute: any, _stackByAttribute: any, executionResponse: Execution.IExecutionResponse, afm: AFM.IAfm, occupiedMeasureBucketsLocalIdentifiers: VisualizationObject.Identifier[]): ICreateColorAssignmentReturnValue;
    protected createPalette(colorPalette: IColorPalette, colorAssignments: IColorAssignment[]): string[];
    protected mapMeasureColor(headerItem: Execution.IMeasureHeaderItem, colorPalette: IColorPalette, colorMapping: IColorMapping[], executionResponse: Execution.IExecutionResponse, afm: AFM.IAfm, defaultColorsAssignment: IColorAssignment[]): IColorItem;
    private getDefaultColorAssignment;
}
export default BulletChartColorStrategy;
