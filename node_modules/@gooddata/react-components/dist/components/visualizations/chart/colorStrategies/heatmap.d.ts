import { IColorPalette } from "@gooddata/gooddata-js";
import { AFM, Execution } from "@gooddata/typings";
import ColorStrategy from "../colorStrategy";
import { IColorAssignment, IColorMapping } from "../../../../interfaces/Config";
import { ICreateColorAssignmentReturnValue } from "../colorFactory";
declare class HeatmapColorStrategy extends ColorStrategy {
    getColorByIndex(index: number): string;
    protected createColorAssignment(colorPalette: IColorPalette, colorMapping: IColorMapping[], _viewByAttribute: any, _stackByAttribute: any, executionResponse: Execution.IExecutionResponse, afm: AFM.IAfm): ICreateColorAssignmentReturnValue;
    protected createPalette(colorPalette: IColorPalette, colorAssignment: IColorAssignment[]): string[];
    private getCustomHeatmapColorPalette;
    private getCalculatedColors;
    private getCalculatedChannel;
    private getDefaultColorAssignment;
}
export default HeatmapColorStrategy;
