"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var gooddata_js_1 = require("@gooddata/gooddata-js");
var attribute_1 = require("./attribute");
var executionResultHelper_1 = require("../../../../helpers/executionResultHelper");
var color_1 = require("../../utils/color");
var utils_1 = require("./utils");
var PointsChartColorStrategy = /** @class */ (function (_super) {
    __extends(PointsChartColorStrategy, _super);
    function PointsChartColorStrategy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PointsChartColorStrategy.prototype.singleMeasureColorMapping = function (colorPalette, colorMapping, executionResponse, afm) {
        var measureGroup = executionResultHelper_1.findMeasureGroupInDimensions(executionResponse.dimensions);
        var measureHeaderItem = measureGroup.items[0];
        var measureColorMapping = color_1.getColorFromMapping(measureHeaderItem, colorMapping, executionResponse, afm);
        var color = utils_1.isValidMappedColor(measureColorMapping, colorPalette)
            ? measureColorMapping
            : { type: "guid", value: colorPalette[0].guid };
        return [
            {
                headerItem: measureHeaderItem,
                color: color,
            },
        ];
    };
    PointsChartColorStrategy.prototype.createSingleColorPalette = function (colorPalette, colorAssignment, viewByAttribute) {
        var length = viewByAttribute ? viewByAttribute.items.length : 1;
        var color = gooddata_js_1.TypeGuards.isGuidColorItem(colorAssignment[0].color)
            ? color_1.getColorByGuid(colorPalette, colorAssignment[0].color.value, 0)
            : colorAssignment[0].color.value;
        var colorString = color_1.getRgbStringFromRGB(color);
        return Array(length).fill(colorString);
    };
    return PointsChartColorStrategy;
}(attribute_1.default));
exports.default = PointsChartColorStrategy;
//# sourceMappingURL=pointsChart.js.map