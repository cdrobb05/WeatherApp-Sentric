import { IColorItem, IColorPalette } from "@gooddata/gooddata-js";
import { AFM, Execution } from "@gooddata/typings";
import ColorStrategy from "../colorStrategy";
import { IColorMapping } from "../../../../interfaces/Config";
import { ICreateColorAssignmentReturnValue } from "../colorFactory";
declare class MeasureColorStrategy extends ColorStrategy {
    protected createColorAssignment(colorPalette: IColorPalette, colorMapping: IColorMapping[], _viewByAttribute: any, _stackByAttribute: any, executionResponse: Execution.IExecutionResponse, afm: AFM.IAfm): ICreateColorAssignmentReturnValue;
    protected mapMeasureColor(headerItem: Execution.IMeasureHeaderItem, currentColorPaletteIndex: number, colorPalette: IColorPalette, colorAssignment: IColorMapping[], executionResponse: Execution.IExecutionResponse, afm: AFM.IAfm): IColorItem;
    private mapColorsFromMeasures;
    private mapColorsFromDerivedMeasure;
    private getDerivedMeasureColorAssignment;
}
export default MeasureColorStrategy;
