import { Execution, VisualizationObject } from "@gooddata/typings";
import { IColorStrategy } from "../colorFactory";
export declare const SUPPORTED_MEASURE_BUCKETS: ReadonlyArray<VisualizationObject.Identifier>;
export declare const isPrimarySeries: (seriesIndex: number, bucketsLocalIdentifiers: string[]) => boolean;
export declare const isTargetSeries: (seriesIndex: number, bucketsLocalIdentifiers: string[]) => boolean;
export declare const isComparativeSeries: (seriesIndex: number, bucketsLocalIdentifiers: string[]) => boolean;
export declare function getBulletChartSeries(executionResultData: Execution.DataValue[][], measureGroup: Execution.IMeasureGroupHeader["measureGroupHeader"], colorStrategy: IColorStrategy, occupiedMeasureBucketsLocalIdentifiers: VisualizationObject.Identifier[]): {
    pointPadding: number;
    zIndex: number;
    bulletChartMeasureType: string;
    x?: number;
    y?: number;
    z?: number;
    value?: number;
    format?: string;
    marker?: {
        enabled: boolean;
    };
    name?: string;
    color?: string | import("../../../../interfaces/Config").IPatternObject;
    legendIndex?: number;
    id?: string;
    parent?: string;
    drilldown?: boolean;
    drillIntersection?: any;
    borderWidth?: number;
    borderColor?: string;
    series?: import("../../../../interfaces/Config").ISeriesItem;
    category?: import("../../../../interfaces/Config").ICategory;
}[];
