"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2019 GoodData Corporation
var React = require("react");
var react_measure_1 = require("react-measure");
var TableVisualization_1 = require("./TableVisualization");
var Table = /** @class */ (function (_super) {
    __extends(Table, _super);
    function Table() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Table.prototype.render = function () {
        var _this = this;
        var _a = this.props, containerHeight = _a.containerHeight, containerWidth = _a.containerWidth;
        return (React.createElement(react_measure_1.default, { client: true }, function (_a) {
            var measureRef = _a.measureRef, contentRect = _a.contentRect;
            var measuredHeight = contentRect.client && contentRect.client.height
                ? Math.floor(contentRect.client.height)
                : 0;
            var usedHeight = containerHeight || measuredHeight;
            var measuredWidth = contentRect.client && contentRect.client.width
                ? Math.floor(contentRect.client.width)
                : 0;
            var usedWidth = containerWidth || measuredWidth;
            return (React.createElement("div", { className: "viz-table-wrap", style: { height: "100%", width: "100%", position: "relative" }, ref: measureRef },
                React.createElement(TableVisualization_1.TableVisualization, __assign({}, _this.props, { containerHeight: usedHeight, containerWidth: usedWidth }))));
        }));
    };
    return Table;
}(React.Component));
exports.Table = Table;
//# sourceMappingURL=Table.js.map