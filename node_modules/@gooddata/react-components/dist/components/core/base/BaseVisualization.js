"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2018 GoodData Corporation
var React = require("react");
var errorStates_1 = require("../../../constants/errorStates");
var errorHandlers_1 = require("../../../helpers/errorHandlers");
var BaseVisualization = /** @class */ (function (_super) {
    __extends(BaseVisualization, _super);
    function BaseVisualization(props) {
        var _this = _super.call(this, props) || this;
        _this.errorMap = errorHandlers_1.generateErrorMap(props.intl);
        return _this;
    }
    BaseVisualization.prototype.render = function () {
        var _a = this.props, execution = _a.execution, error = _a.error, isLoading = _a.isLoading;
        var ErrorComponent = this.props.ErrorComponent;
        var LoadingComponent = this.props.LoadingComponent;
        if (error) {
            var errorProps = this.errorMap[this.errorMap.hasOwnProperty(error) ? error : errorStates_1.ErrorStates.UNKNOWN_ERROR];
            return ErrorComponent ? React.createElement(ErrorComponent, __assign({ code: error }, errorProps)) : null;
        }
        // when in pageble mode (getPage present) never show loading (its handled by the component)
        if ((isLoading || !execution) && !this.props.getPage) {
            return LoadingComponent ? React.createElement(LoadingComponent, null) : null;
        }
        return this.renderVisualization();
    };
    return BaseVisualization;
}(React.Component));
exports.BaseVisualization = BaseVisualization;
//# sourceMappingURL=BaseVisualization.js.map