"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2020 GoodData Corporation
var React = require("react");
var noop = require("lodash/noop");
var Visualization_1 = require("../../visualizations/Visualization");
var IntlWrapper_1 = require("./IntlWrapper");
var TranslationsProvider_1 = require("./TranslationsProvider");
var fixEmptyHeaderItems_1 = require("./utils/fixEmptyHeaderItems");
var VisualizationLoadingHOC_1 = require("./VisualizationLoadingHOC");
var Chart_1 = require("../../../proptypes/Chart");
var BaseVisualization_1 = require("./BaseVisualization");
var color_1 = require("../../visualizations/utils/color");
var StatelessBaseChart = /** @class */ (function (_super) {
    __extends(StatelessBaseChart, _super);
    function StatelessBaseChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StatelessBaseChart.prototype.renderVisualization = function () {
        var _a = this.props, afterRender = _a.afterRender, height = _a.height, locale = _a.locale, config = _a.config, type = _a.type, execution = _a.execution, onDataTooLarge = _a.onDataTooLarge, pushData = _a.pushData, VisualizationComponent = _a.visualizationComponent, dataSource = _a.dataSource, resultSpec = _a.resultSpec, drillableItems = _a.drillableItems, onLegendReady = _a.onLegendReady, onDrill = _a.onDrill, onFiredDrillEvent = _a.onFiredDrillEvent, onNegativeValues = _a.onNegativeValues;
        var colors = config.colors, colorPalette = config.colorPalette;
        var fullConfig = __assign({}, config, { type: type, colorPalette: color_1.getValidColorPalette(colors, colorPalette) });
        return (React.createElement(IntlWrapper_1.IntlWrapper, { locale: locale },
            React.createElement(TranslationsProvider_1.IntlTranslationsProvider, null, function (translationProps) {
                var fixedExecutionResult = fixEmptyHeaderItems_1.fixEmptyHeaderItems(execution.executionResult, translationProps.emptyHeaderString);
                return (React.createElement(VisualizationComponent, { executionRequest: {
                        afm: dataSource.getAfm(),
                        resultSpec: resultSpec,
                    }, executionResponse: execution.executionResponse, executionResult: fixedExecutionResult, height: height, config: fullConfig, afterRender: afterRender, onDataTooLarge: onDataTooLarge, onNegativeValues: onNegativeValues, drillableItems: drillableItems, onFiredDrillEvent: onFiredDrillEvent, onDrill: onDrill, onLegendReady: onLegendReady, numericSymbols: translationProps.numericSymbols, locale: locale, pushData: pushData }));
            })));
    };
    StatelessBaseChart.defaultProps = __assign({}, VisualizationLoadingHOC_1.commonDefaultProps, { onDataTooLarge: noop, onLegendReady: noop, config: {}, visualizationComponent: Visualization_1.Visualization });
    StatelessBaseChart.propTypes = Chart_1.ChartPropTypes;
    return StatelessBaseChart;
}(BaseVisualization_1.BaseVisualization));
exports.StatelessBaseChart = StatelessBaseChart;
exports.BaseChart = VisualizationLoadingHOC_1.visualizationLoadingHOC(StatelessBaseChart);
//# sourceMappingURL=BaseChart.js.map