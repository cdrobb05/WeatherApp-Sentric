import { AFM, Execution } from "@gooddata/typings";
import { IColumnTotal } from "./AggregationsMenu";
import { IMenuAggregationClickConfig } from "../../../interfaces/PivotTable";
declare function getTotalsForAttributeHeader(totals: AFM.ITotalItem[], measureLocalIdentifiers: string[]): IColumnTotal[];
declare function getTotalsForMeasureHeader(totals: AFM.ITotalItem[], measureLocalIdentifier: string): IColumnTotal[];
declare function getHeaderMeasureLocalIdentifiers(measureGroupHeaderItems: Execution.IMeasureHeaderItem[], lastFieldType: string, lastFieldId: string | number): string[];
declare function isTotalEnabledForAttribute(attributeLocalIdentifier: string, totalType: AFM.TotalType, columnTotals: IColumnTotal[]): boolean;
export declare function getUpdatedColumnTotals(columnTotals: AFM.ITotalItem[], menuAggregationClickConfig: IMenuAggregationClickConfig): AFM.ITotalItem[];
declare const _default: {
    getTotalsForAttributeHeader: typeof getTotalsForAttributeHeader;
    getTotalsForMeasureHeader: typeof getTotalsForMeasureHeader;
    getHeaderMeasureLocalIdentifiers: typeof getHeaderMeasureLocalIdentifiers;
    isTotalEnabledForAttribute: typeof isTotalEnabledForAttribute;
    getUpdatedColumnTotals: typeof getUpdatedColumnTotals;
};
export default _default;
