"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2020 GoodData Corporation
var React = require("react");
var HeaderCell_1 = require("./HeaderCell");
var ColumnGroupHeader = /** @class */ (function (_super) {
    __extends(ColumnGroupHeader, _super);
    function ColumnGroupHeader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ColumnGroupHeader.prototype.render = function () {
        var _a = this.props, menu = _a.menu, intl = _a.intl, getAfmFilters = _a.getAfmFilters;
        var columnGroupDef = this.props.columnGroup.getColGroupDef();
        var parent = this.props.columnGroup.getParent();
        // do not show menu for the first group header and empty headers above row attribute column heders
        var showMenu = !!parent && !!columnGroupDef.headerName;
        return (React.createElement(HeaderCell_1.default, { className: "s-pivot-table-column-group-header", displayText: this.props.displayName, enableSorting: false, menuPosition: HeaderCell_1.ALIGN_LEFT, textAlign: HeaderCell_1.ALIGN_LEFT, menu: showMenu ? menu : null, onMenuAggregationClick: this.props.onMenuAggregationClick, colId: columnGroupDef.field, getColumnTotals: this.props.getColumnTotals, getExecutionResponse: this.props.getExecutionResponse, intl: intl, getAfmFilters: getAfmFilters }));
    };
    return ColumnGroupHeader;
}(React.Component));
exports.default = ColumnGroupHeader;
//# sourceMappingURL=ColumnGroupHeader.js.map