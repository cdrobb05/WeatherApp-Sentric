import { AFM, Execution } from "@gooddata/typings";
import { IDrillEventIntersectionElement, IDrillEventIntersectionElementExtended, IDrillEventContextTable, IDrillEventContextTableExtended } from "../../../interfaces/DrillEvents";
import { IMappingHeader } from "../../../interfaces/MappingHeader";
import { ColDef } from "ag-grid-community";
import { IGridHeader } from "./agGridTypes";
export declare const getDrillRowData: (leafColumnDefs: ColDef[], rowData: {
    [key: string]: any;
}) => any[];
export declare const convertPivotTableDrillContextToLegacy: (drillContext: IDrillEventContextTableExtended, executionContext: AFM.IAfm) => IDrillEventContextTable;
export declare const convertDrillIntersectionToLegacy: (intersectionExtended: IDrillEventIntersectionElementExtended[], afm: AFM.IAfm) => IDrillEventIntersectionElement[];
export declare const getMeasureDrillItem: (responseHeaders: Execution.IHeader[], header: Execution.IResultMeasureHeaderItem) => any;
export declare const assignDrillItemsAndType: (header: IGridHeader, currentHeader: Execution.IResultHeaderItem, responseHeaders: Execution.IHeader[], headerIndex: number, drillItems: IMappingHeader[]) => void;
