"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2020 GoodData Corporation
var React = require("react");
var common_1 = require("../../../../components/visualizations/utils/common");
var common_2 = require("../../../../helpers/geoChart/common");
function PushpinSizeLegend(props) {
    var _a = props.sizes, sizes = _a === void 0 ? [] : _a, format = props.format, _b = props.numericSymbols, numericSymbols = _b === void 0 ? [] : _b, measureName = props.measureName;
    var sizeData = sizes.filter(isFinite);
    if (!sizeData.length) {
        return null;
    }
    var min = Math.min.apply(Math, sizeData);
    var max = Math.max.apply(Math, sizeData);
    if (min === max) {
        return null;
    }
    var averageValue = common_2.calculateAverage(sizeData);
    var diff = max - min;
    return (React.createElement("div", { className: "pushpin-size-legend s-pushpin-size-legend" },
        React.createElement("div", { className: "metric-name", title: measureName },
            measureName,
            ":"),
        React.createElement("div", { className: "pushpin-size-legend-circle-list" },
            React.createElement("div", { className: "pushpin-size-legend-circle circle-min-value" },
                React.createElement("span", { className: "circle-min-icon" }),
                React.createElement("span", { className: "circle-value" }, common_1.formatLegendLabel(min, format, diff, numericSymbols))),
            React.createElement("div", { className: "pushpin-size-legend-circle" },
                React.createElement("span", { className: "circle-average-icon" }),
                React.createElement("span", { className: "circle-value" }, common_1.formatLegendLabel(averageValue, format, diff, numericSymbols))),
            React.createElement("div", { className: "pushpin-size-legend-circle circle-max-value" },
                React.createElement("span", { className: "circle-max-icon" }),
                React.createElement("span", { className: "circle-value" }, common_1.formatLegendLabel(max, format, diff, numericSymbols))))));
}
exports.default = PushpinSizeLegend;
//# sourceMappingURL=PushpinSizeLegend.js.map