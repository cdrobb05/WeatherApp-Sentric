"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2020 GoodData Corporation
var isObject = require("lodash/isObject");
var isFinite = require("lodash/isFinite");
var get = require("lodash/get");
var set = require("lodash/set");
var isNil = require("lodash/isNil");
var package_json_1 = require("../../package.json");
var legend_1 = require("../constants/legend");
function setTelemetryHeaders(sdk, componentName, props) {
    sdk.config.setJsPackage(package_json_1.name, package_json_1.version);
    sdk.config.setRequestHeader("X-GDC-JS-SDK-COMP", componentName);
    if (isObject(props)) {
        sdk.config.setRequestHeader("X-GDC-JS-SDK-COMP-PROPS", Object.keys(props).join(","));
    }
}
exports.setTelemetryHeaders = setTelemetryHeaders;
function getObjectIdFromUri(uri) {
    var match = /\/obj\/([^$\/\?]*)/.exec(uri);
    return match ? match[1] : null;
}
exports.getObjectIdFromUri = getObjectIdFromUri;
function visualizationIsBetaWarning() {
    // tslint:disable-next-line no-console
    console.warn("This chart is not production-ready and may not provide the full functionality. Use it at your own risk.");
}
exports.visualizationIsBetaWarning = visualizationIsBetaWarning;
function percentFormatter(value) {
    return isNil(value) ? "" : parseFloat(value.toFixed(2)) + "%";
}
exports.percentFormatter = percentFormatter;
exports.unwrap = function (wrappedObject) {
    return wrappedObject[Object.keys(wrappedObject)[0]];
};
function stringToFloat(text) {
    var parsedNumber = parseFloat(text);
    if (isNaN(parsedNumber)) {
        // tslint:disable-next-line no-console
        console.warn("SDK: utils - stringToFloat: " + text + " is not a number");
    }
    return parsedNumber;
}
exports.stringToFloat = stringToFloat;
/**
 * Get min/max values in number array and ignore NaN values
 * @param data
 */
function getMinMax(data) {
    return data.reduce(function (result, value) {
        if (!isFinite(value)) {
            return result;
        }
        var min = isFinite(result.min) ? Math.min(value, result.min) : value;
        var max = isFinite(result.max) ? Math.max(value, result.max) : value;
        return {
            min: min,
            max: max,
        };
    }, {});
}
exports.getMinMax = getMinMax;
function disableBucketItemComputeRatio(item) {
    if (getComputeRatio(item)) {
        setComputeRatio(item, false);
    }
    return item;
}
exports.disableBucketItemComputeRatio = disableBucketItemComputeRatio;
function getComputeRatio(bucketItem) {
    return get(bucketItem, ["measure", "definition", "measureDefinition", "computeRatio"], false);
}
exports.getComputeRatio = getComputeRatio;
function setComputeRatio(bucketItem, value) {
    set(bucketItem, ["measure", "definition", "measureDefinition", "computeRatio"], value);
}
function shouldShowFluid(documentObj) {
    if (!documentObj) {
        return false;
    }
    return documentObj.documentElement.clientWidth < legend_1.FLUID_LEGEND_THRESHOLD;
}
exports.shouldShowFluid = shouldShowFluid;
exports.sleep = function (delay) { return __awaiter(_this, void 0, void 0, function () {
    return __generator(this, function (_a) {
        return [2 /*return*/, new Promise(function (resolve) {
                // tslint:disable-next-line no-string-based-set-timeout
                setTimeout(resolve, delay);
            })];
    });
}); };
exports.positioningToAlignPoints = function (positioning) {
    return positioning.map(function (_a) {
        var snapPoints = _a.snapPoints, offset = _a.offset;
        return ({
            align: snapPoints.parent + " " + snapPoints.child,
            offset: offset,
        });
    });
};
//# sourceMappingURL=utils.js.map