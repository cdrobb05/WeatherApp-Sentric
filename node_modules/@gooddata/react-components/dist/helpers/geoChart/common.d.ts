import { VisualizationObject, Execution, VisualizationInput } from "@gooddata/typings";
import { IChartConfig, IColorAssignment } from "../../interfaces/Config";
import { IGeoConfig, IGeoData, IGeoPointsConfig } from "../../interfaces/GeoChart";
export declare function getGeoAttributeHeaderItems(executionResult: Execution.IExecutionResult, geoData: IGeoData): Execution.IResultHeaderItem[][];
export declare function isDataOfReasonableSize(executionResult: Execution.IExecutionResult, geoData: IGeoData, limit: number): boolean;
export declare function isLocationMissing(buckets: VisualizationObject.IBucket[]): boolean;
export declare function calculateAverage(values?: number[]): number;
export declare function getFormatFromExecutionResponse(result: Execution.IExecutionResponse, indexMeasure: number): string;
export declare function isClusteringAllowed(geoData: IGeoData, groupNearbyPoints?: boolean): boolean;
export declare function isGeoConfig(config: IChartConfig | IGeoConfig): config is IGeoConfig;
export declare function isChartConfig(config: IChartConfig | IGeoConfig): config is IChartConfig;
export declare function isPointsConfigChanged(prevPointsConfig: IGeoPointsConfig, pointsConfig: IGeoPointsConfig): boolean;
export declare function isFluidLegendEnabled(responsive: boolean, showFluidLegend: boolean): boolean;
export declare function isColorAssignmentItemChanged(prevColorAssigment: IColorAssignment[], colorAssigment: IColorAssignment[]): boolean;
export declare function isTooltipTextValueString(tooltipText: VisualizationInput.IAttribute | string): tooltipText is string;
