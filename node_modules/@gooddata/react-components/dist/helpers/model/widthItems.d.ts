import { IAttributeColumnWidthItem, IMeasureColumnWidthItem, IAllMeasureColumnWidthItem, IWeakMeasureColumnWidthItem } from "../../interfaces/PivotTable";
import { AFM } from "@gooddata/typings";
export declare class AttributeColumnWidthItemBuilder implements IAttributeColumnWidthItem {
    attributeColumnWidthItem: IAttributeColumnWidthItem["attributeColumnWidthItem"];
    constructor(attributeIdentifier: string, width: number, allowGrowToFit?: boolean);
}
export declare class MeasureColumnWidthItemBuilder implements IMeasureColumnWidthItem {
    measureColumnWidthItem: IMeasureColumnWidthItem["measureColumnWidthItem"];
    constructor(measureIdentifier: AFM.Identifier, width: number | "auto", allowGrowToFit?: boolean);
    attributeLocators: (...attributeLocators: {
        attributeIdentifier: string;
        element: string;
    }[]) => this;
}
export declare class AllMeasureColumnWidthItemBuilder implements IAllMeasureColumnWidthItem {
    measureColumnWidthItem: IAllMeasureColumnWidthItem["measureColumnWidthItem"];
    constructor(width: number);
}
export declare class WeakMeasureColumnWidthItemBuilder implements IWeakMeasureColumnWidthItem {
    measureColumnWidthItem: IWeakMeasureColumnWidthItem["measureColumnWidthItem"];
    constructor(measureIdentifier: AFM.Identifier, width: number, allowGrowToFit?: boolean);
}
export declare const attributeColumnWidthItem: (attributeIdentifier: string, width: number) => AttributeColumnWidthItemBuilder;
export declare const measureColumnWidthItem: (measureIdentifier: string, width: LineAndPositionSetting, allowGrowToFit?: boolean) => MeasureColumnWidthItemBuilder;
export declare const allMeasureColumnWidthItem: (width: number) => AllMeasureColumnWidthItemBuilder;
export declare const weakMeasureColumnWidthItemBuilder: (measureIdentifier: string, width: number, allowGrowToFit?: boolean) => WeakMeasureColumnWidthItemBuilder;
