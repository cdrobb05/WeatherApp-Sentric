"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MeasureValueFilter_1 = require("../../interfaces/MeasureValueFilter");
var MeasureValueFilterBuilder = /** @class */ (function () {
    function MeasureValueFilterBuilder(measureLocalIdentifier) {
        var _this = this;
        this.condition = function (operator, value, treatNullValuesAsZero) {
            if (treatNullValuesAsZero === void 0) { treatNullValuesAsZero = false; }
            var newCondition = MeasureValueFilter_1.getMeasureValueFilterCondition(operator, value, treatNullValuesAsZero);
            if (newCondition === null) {
                delete _this.measureValueFilter.condition;
            }
            else {
                _this.measureValueFilter.condition = newCondition;
            }
            return _this;
        };
        this.getAfmMeasureValueFilter = function () {
            return { measureValueFilter: _this.measureValueFilter };
        };
        this.measureValueFilter = {
            measure: {
                localIdentifier: measureLocalIdentifier,
            },
        };
    }
    return MeasureValueFilterBuilder;
}());
exports.MeasureValueFilterBuilder = MeasureValueFilterBuilder;
exports.measureValueFilter = function (measureLocalIdentifier) {
    return new MeasureValueFilterBuilder(measureLocalIdentifier);
};
//# sourceMappingURL=measureValueFilters.js.map