import { VisualizationObject } from "@gooddata/typings";
import { SDK } from "@gooddata/gooddata-js";
import { IMinMax } from "../interfaces/Utils";
import { IPositioning } from "../typings/positioning";
export declare function setTelemetryHeaders(sdk: SDK, componentName: string, props: object): void;
export declare function getObjectIdFromUri(uri: string): string;
export declare function visualizationIsBetaWarning(): void;
export declare function percentFormatter(value: number): string;
export declare const unwrap: (wrappedObject: any) => any;
export declare function stringToFloat(text: string): number;
/**
 * Get min/max values in number array and ignore NaN values
 * @param data
 */
export declare function getMinMax(data: number[]): IMinMax;
export declare function disableBucketItemComputeRatio<T extends VisualizationObject.BucketItem>(item: T): T;
export declare function getComputeRatio(bucketItem: VisualizationObject.BucketItem): boolean;
export declare function shouldShowFluid(documentObj: Document): boolean;
export declare const sleep: (delay: number) => Promise<void>;
export declare const positioningToAlignPoints: (positioning: IPositioning[]) => {
    align: string;
    offset: import("../typings/positioning.js").IOffset;
}[];
