"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _a;
// (C) 2019-2020 GoodData Corporation
var Operator = require("../constants/measureValueFilterOperators");
var translationKeysDictionary = (_a = {},
    _a[Operator.ALL] = "mvf.operator.all",
    _a[Operator.GREATER_THAN] = "mvf.operator.greaterThan",
    _a[Operator.GREATER_THAN_OR_EQUAL_TO] = "mvf.operator.greaterThanOrEqualTo",
    _a[Operator.LESS_THAN] = "mvf.operator.lessThan",
    _a[Operator.LESS_THAN_OR_EQUAL_TO] = "mvf.operator.lessThanOrEqualTo",
    _a[Operator.EQUAL_TO] = "mvf.operator.equalTo",
    _a[Operator.NOT_EQUAL_TO] = "mvf.operator.notEqualTo",
    _a[Operator.BETWEEN] = "mvf.operator.between",
    _a[Operator.NOT_BETWEEN] = "mvf.operator.notBetween",
    _a);
exports.getOperatorTranslationKey = function (operator) {
    return translationKeysDictionary[operator];
};
exports.getOperatorIcon = function (operator) {
    var _a;
    var iconNamesDictionary = (_a = {},
        _a[Operator.ALL] = "all",
        _a[Operator.GREATER_THAN] = "greater-than",
        _a[Operator.GREATER_THAN_OR_EQUAL_TO] = "greater-than-equal-to",
        _a[Operator.LESS_THAN] = "less-than",
        _a[Operator.LESS_THAN_OR_EQUAL_TO] = "less-than-equal-to",
        _a[Operator.EQUAL_TO] = "equal-to",
        _a[Operator.NOT_EQUAL_TO] = "not-equal-to",
        _a[Operator.BETWEEN] = "between",
        _a[Operator.NOT_BETWEEN] = "not-between",
        _a);
    return iconNamesDictionary[operator];
};
//# sourceMappingURL=measureValueFilterOperator.js.map