{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\cdrob\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction ZipCodeInputComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Must be a valid US Zip Code \");\n    i0.ɵɵelementEnd();\n  }\n} //import { get } from 'http';\n//import type {NextApiRequest,NextApiResponse} from 'next'\n//import React,{useState} from 'react'\n\n\nexport class ZipCodeInputComponent {\n  constructor() {\n    this.zipCodeDisplay = 0;\n    this.zipResult = \"default\";\n    this.weatherResult = \"default\";\n  } //constructor(private zipCodeData:ZipCodeServiceService){\n  //let headers = new HttpHeaders()\n  //headers.append('Access-Control-Allow-Credentials', 'true')\n  //let url = \"https://www.zipcodeapi.com/rest/ncb7p0ZTmZk58BayTEW2kwk1KUfmtLhJTC44bsCqwLcJV8lxaTG0IUZshjdT1vqL/info.json/80111/degrees\"\n  //this.zipCodeData.getData(url).subscribe(data=>{\n  //  console.log(data)\n  //})\n  //}\n  //const [userData,setUserData] = useState<zipCodeInterface>([])\n  //.then().map(u => u.).toString()\n  //fetch(\"https://www.zipcodeapi.com/rest/<api_key>/info.<format>/<zip_code>/<units>\")\n\n\n  submitZipCode(zipCodeIn) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //console.log(this.weatherResult)\n      let headers = new Headers();\n      headers.append('Access-Control-Allow-Origin', 'http://localhost:4200');\n      headers.append('Access-Control-Allow-Credentials', 'true');\n      let url = \"https://www.zipcodeapi.com/rest/ncb7p0ZTmZk58BayTEW2kwk1KUfmtLhJTC44bsCqwLcJV8lxaTG0IUZshjdT1vqL/info.json/80111/degrees\";\n      _this.zipCodeDisplay = +zipCodeIn; //const zipReq = await fetch(url,{mode:'no-cors',headers:headers})\n      //.then(function(response: any){\n      //  return response\n      //}\n\n      const requestOne = yield fetch(url);\n      const data = yield requestOne.json(); //let zipRes = this.handleResp(zipReq)\n      //console.log(zipRes[0])\n      //console.log(zipRes[1])\n      //zipReq.then(value => { return value + ' and bar'; })\n      //const latlongloc = (await zipReq).json()\n      //.then(res => res.text())\n      //.then(res => {\n      //  return res as String\n      //})\n      //zipPromise.then((value: any) => {\n      //  this.weatherResult = value\n      //})\n      //this.weatherResult = zipPromise.json()\n      //this.weatherResult = this.weatherResult.url\n\n      console.log(\"zipResult: \" + _this.zipResult + \" zipResponse: \" + \"zipRequest: \");\n    })();\n  } //getData(url:string):Promise<zipCodeInterface>{\n  //  return fetch(url)\n  //  .then(res => res.json())\n  //  .then(res => {return res as String})\n  //}\n\n\n  submitWeather() {\n    return _asyncToGenerator(function* () {\n      const requestOne = yield fetch(`https://api.weather.gov/points/39.7456,-97.0892`);\n      const point = yield requestOne.json(); //console.log(\"Point:\",point)\n      // The second request is to get the actual forecast.\n\n      const requestTwo = yield fetch(point.properties.forecast);\n      const forecast = yield requestTwo.json(); // Third request is to get the alerts.\n      //const requestThree = await fetch(\n      //  `https://api.weather.gov/alerts/active?status=actual&message_type=alert&point=39.7456,-97.0892`\n      //)\n      //const alerts = await requestThree.json()\n      // Four request is to get the local weather office.\n      //const requestFour = await fetch(point.properties.forecastOffice)\n      //const station = await requestFour.json()\n      // Send the response.\n      //res.status(200).json({\n      //  alerts: alerts?.features,\n      //  coordinates: {lat, lng},\n      // forecast: forecast?.properties?.periods,\n      //  location: {\n      //    city: point?.properties?.relativeLocation?.properties?.city,\n      //    state: point?.properties?.relativeLocation?.properties?.state\n      //  },\n      //  radar: point?.properties?.radarStation,\n      //  station: station?.name,\n      //  updated: forecast?.properties?.updated\n      //})\n\n      console.log(\"Forecast:\", forecast.properties.periods[0].shortForecast);\n    })();\n  }\n\n}\n\nZipCodeInputComponent.ɵfac = function ZipCodeInputComponent_Factory(t) {\n  return new (t || ZipCodeInputComponent)();\n};\n\nZipCodeInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ZipCodeInputComponent,\n  selectors: [[\"zip-code-input\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[1, \"form-group\"], [\"for\", \"zipCode\"], [\"required\", \"\", \"minlength\", \"5\", \"maxlength\", \"5\", \"ngModel\", \"\", \"name\", \"zipCode\", \"id\", \"zipCode\", \"type\", \"text\", 1, \"form-control\"], [\"zipCode\", \"ngModel\", \"zipCodeIn\", \"\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"center-button\"], [\"name\", \"submitButton\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"name\", \"sumbitButton\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]],\n  template: function ZipCodeInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"form\");\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelementStart(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Enter A Zip Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2, 3);\n      i0.ɵɵtemplate(7, ZipCodeInputComponent_div_7_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"div\", 5);\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function ZipCodeInputComponent_Template_button_click_10_listener() {\n        i0.ɵɵrestoreView(_r3);\n\n        const _r1 = i0.ɵɵreference(6);\n\n        return ctx.submitZipCode(_r1.value);\n      });\n      i0.ɵɵtext(11, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ZipCodeInputComponent_Template_button_click_12_listener() {\n        return ctx.submitWeather();\n      });\n      i0.ɵɵtext(13, \"Submit Weather\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\");\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\");\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", _r0.touched && !_r0.valid);\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\"You entered: \", ctx.zipCodeDisplay, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.zipResult);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i1.DefaultValueAccessor, i1.RequiredValidator, i1.MinLengthValidator, i1.MaxLengthValidator, i1.NgControlStatus, i1.NgModel, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ6aXAtY29kZS1pbnB1dC5jb21wb25lbnQuY3NzIn0= */\", \"label[_ngcontent-%COMP%]{\\n        display: block;\\n        text-align: center;\\n    }\\n    .center-button[_ngcontent-%COMP%]{\\n        margin-left: 50px;\\n        margin-top: 10px;\\n    }\\n    .alert[_ngcontent-%COMP%]{\\n        color: red;\\n    }\"]\n});\n\nfunction handleResp(data) {\n  // Check for error\n  if (data.error_msg) {\n    console.log(data.error_msg);\n    return [-1];\n  } else if (\"lat\" in data) {\n    // Set city and state\n    return [data.lat, data.lng];\n  }\n\n  return [data.lat, data.lng];\n}","map":{"version":3,"sources":["C:/Users/cdrob/weather-app/src/app/zip-code-input/zip-code-input.component.ts"],"names":["i0","i1","i2","ZipCodeInputComponent_div_7_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ZipCodeInputComponent","constructor","zipCodeDisplay","zipResult","weatherResult","submitZipCode","zipCodeIn","headers","Headers","append","url","requestOne","fetch","data","json","console","log","submitWeather","point","requestTwo","properties","forecast","periods","shortForecast","ɵfac","ZipCodeInputComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","ZipCodeInputComponent_Template","_r3","ɵɵgetCurrentView","ɵɵelement","ɵɵtemplate","ɵɵlistener","ZipCodeInputComponent_Template_button_click_10_listener","ɵɵrestoreView","_r1","ɵɵreference","value","ZipCodeInputComponent_Template_button_click_12_listener","_r0","ɵɵadvance","ɵɵproperty","touched","valid","ɵɵtextInterpolate1","ɵɵtextInterpolate","directives","ɵNgNoValidate","NgControlStatusGroup","NgForm","DefaultValueAccessor","RequiredValidator","MinLengthValidator","MaxLengthValidator","NgControlStatus","NgModel","NgIf","styles","handleResp","error_msg","lat","lng"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nimport * as i2 from \"@angular/common\";\r\nfunction ZipCodeInputComponent_div_7_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 8);\r\n    i0.ɵɵtext(1, \" Must be a valid US Zip Code \");\r\n    i0.ɵɵelementEnd();\r\n} }\r\n//import { get } from 'http';\r\n//import type {NextApiRequest,NextApiResponse} from 'next'\r\n//import React,{useState} from 'react'\r\nexport class ZipCodeInputComponent {\r\n    constructor() {\r\n        this.zipCodeDisplay = 0;\r\n        this.zipResult = \"default\";\r\n        this.weatherResult = \"default\";\r\n    }\r\n    //constructor(private zipCodeData:ZipCodeServiceService){\r\n    //let headers = new HttpHeaders()\r\n    //headers.append('Access-Control-Allow-Credentials', 'true')\r\n    //let url = \"https://www.zipcodeapi.com/rest/ncb7p0ZTmZk58BayTEW2kwk1KUfmtLhJTC44bsCqwLcJV8lxaTG0IUZshjdT1vqL/info.json/80111/degrees\"\r\n    //this.zipCodeData.getData(url).subscribe(data=>{\r\n    //  console.log(data)\r\n    //})\r\n    //}\r\n    //const [userData,setUserData] = useState<zipCodeInterface>([])\r\n    //.then().map(u => u.).toString()\r\n    //fetch(\"https://www.zipcodeapi.com/rest/<api_key>/info.<format>/<zip_code>/<units>\")\r\n    async submitZipCode(zipCodeIn) {\r\n        //console.log(this.weatherResult)\r\n        let headers = new Headers();\r\n        headers.append('Access-Control-Allow-Origin', 'http://localhost:4200');\r\n        headers.append('Access-Control-Allow-Credentials', 'true');\r\n        let url = \"https://www.zipcodeapi.com/rest/ncb7p0ZTmZk58BayTEW2kwk1KUfmtLhJTC44bsCqwLcJV8lxaTG0IUZshjdT1vqL/info.json/80111/degrees\";\r\n        this.zipCodeDisplay = +zipCodeIn;\r\n        //const zipReq = await fetch(url,{mode:'no-cors',headers:headers})\r\n        //.then(function(response: any){\r\n        //  return response\r\n        //}\r\n        const requestOne = await fetch(url);\r\n        const data = await requestOne.json();\r\n        //let zipRes = this.handleResp(zipReq)\r\n        //console.log(zipRes[0])\r\n        //console.log(zipRes[1])\r\n        //zipReq.then(value => { return value + ' and bar'; })\r\n        //const latlongloc = (await zipReq).json()\r\n        //.then(res => res.text())\r\n        //.then(res => {\r\n        //  return res as String\r\n        //})\r\n        //zipPromise.then((value: any) => {\r\n        //  this.weatherResult = value\r\n        //})\r\n        //this.weatherResult = zipPromise.json()\r\n        //this.weatherResult = this.weatherResult.url\r\n        console.log(\"zipResult: \" + this.zipResult + \" zipResponse: \" + \"zipRequest: \");\r\n    }\r\n    //getData(url:string):Promise<zipCodeInterface>{\r\n    //  return fetch(url)\r\n    //  .then(res => res.json())\r\n    //  .then(res => {return res as String})\r\n    //}\r\n    async submitWeather() {\r\n        const requestOne = await fetch(`https://api.weather.gov/points/39.7456,-97.0892`);\r\n        const point = await requestOne.json();\r\n        //console.log(\"Point:\",point)\r\n        // The second request is to get the actual forecast.\r\n        const requestTwo = await fetch(point.properties.forecast);\r\n        const forecast = await requestTwo.json();\r\n        // Third request is to get the alerts.\r\n        //const requestThree = await fetch(\r\n        //  `https://api.weather.gov/alerts/active?status=actual&message_type=alert&point=39.7456,-97.0892`\r\n        //)\r\n        //const alerts = await requestThree.json()\r\n        // Four request is to get the local weather office.\r\n        //const requestFour = await fetch(point.properties.forecastOffice)\r\n        //const station = await requestFour.json()\r\n        // Send the response.\r\n        //res.status(200).json({\r\n        //  alerts: alerts?.features,\r\n        //  coordinates: {lat, lng},\r\n        // forecast: forecast?.properties?.periods,\r\n        //  location: {\r\n        //    city: point?.properties?.relativeLocation?.properties?.city,\r\n        //    state: point?.properties?.relativeLocation?.properties?.state\r\n        //  },\r\n        //  radar: point?.properties?.radarStation,\r\n        //  station: station?.name,\r\n        //  updated: forecast?.properties?.updated\r\n        //})\r\n        console.log(\"Forecast:\", forecast.properties.periods[0].shortForecast);\r\n    }\r\n}\r\nZipCodeInputComponent.ɵfac = function ZipCodeInputComponent_Factory(t) { return new (t || ZipCodeInputComponent)(); };\r\nZipCodeInputComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ZipCodeInputComponent, selectors: [[\"zip-code-input\"]], decls: 18, vars: 3, consts: [[1, \"form-group\"], [\"for\", \"zipCode\"], [\"required\", \"\", \"minlength\", \"5\", \"maxlength\", \"5\", \"ngModel\", \"\", \"name\", \"zipCode\", \"id\", \"zipCode\", \"type\", \"text\", 1, \"form-control\"], [\"zipCode\", \"ngModel\", \"zipCodeIn\", \"\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"center-button\"], [\"name\", \"submitButton\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"name\", \"sumbitButton\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]], template: function ZipCodeInputComponent_Template(rf, ctx) { if (rf & 1) {\r\n        const _r3 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"form\");\r\n        i0.ɵɵelementStart(1, \"div\", 0);\r\n        i0.ɵɵelementStart(2, \"label\", 1);\r\n        i0.ɵɵtext(3, \"Enter A Zip Code\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(4, \"input\", 2, 3);\r\n        i0.ɵɵtemplate(7, ZipCodeInputComponent_div_7_Template, 2, 0, \"div\", 4);\r\n        i0.ɵɵelement(8, \"br\");\r\n        i0.ɵɵelementStart(9, \"div\", 5);\r\n        i0.ɵɵelementStart(10, \"button\", 6);\r\n        i0.ɵɵlistener(\"click\", function ZipCodeInputComponent_Template_button_click_10_listener() { i0.ɵɵrestoreView(_r3); const _r1 = i0.ɵɵreference(6); return ctx.submitZipCode(_r1.value); });\r\n        i0.ɵɵtext(11, \"Submit\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(12, \"button\", 7);\r\n        i0.ɵɵlistener(\"click\", function ZipCodeInputComponent_Template_button_click_12_listener() { return ctx.submitWeather(); });\r\n        i0.ɵɵtext(13, \"Submit Weather\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(14, \"p\");\r\n        i0.ɵɵtext(15);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(16, \"p\");\r\n        i0.ɵɵtext(17);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        const _r0 = i0.ɵɵreference(5);\r\n        i0.ɵɵadvance(7);\r\n        i0.ɵɵproperty(\"ngIf\", _r0.touched && !_r0.valid);\r\n        i0.ɵɵadvance(8);\r\n        i0.ɵɵtextInterpolate1(\"You entered: \", ctx.zipCodeDisplay, \"\");\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(ctx.zipResult);\r\n    } }, directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i1.DefaultValueAccessor, i1.RequiredValidator, i1.MinLengthValidator, i1.MaxLengthValidator, i1.NgControlStatus, i1.NgModel, i2.NgIf], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ6aXAtY29kZS1pbnB1dC5jb21wb25lbnQuY3NzIn0= */\", \"label[_ngcontent-%COMP%]{\\n        display: block;\\n        text-align: center;\\n    }\\n    .center-button[_ngcontent-%COMP%]{\\n        margin-left: 50px;\\n        margin-top: 10px;\\n    }\\n    .alert[_ngcontent-%COMP%]{\\n        color: red;\\n    }\"] });\r\nfunction handleResp(data) {\r\n    // Check for error\r\n    if (data.error_msg) {\r\n        console.log(data.error_msg);\r\n        return [-1];\r\n    }\r\n    else if (\"lat\" in data) {\r\n        // Set city and state\r\n        return [data.lat, data.lng];\r\n    }\r\n    return [data.lat, data.lng];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}